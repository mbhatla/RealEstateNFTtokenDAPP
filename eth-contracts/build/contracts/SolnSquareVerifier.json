{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "key",
          "type": "bytes4"
        }
      ],
      "name": "AddedToSolutions",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ownershipChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "unPaused",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "changePauseStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "gettokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a_p",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "b_p",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c_p",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "h",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "k",
              "type": "tuple"
            }
          ],
          "internalType": "struct Verifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "mintRET",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"key\",\"type\":\"bytes4\"}],\"name\":\"AddedToSolutions\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ownershipChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"unPaused\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"changePauseStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"gettokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a_p\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"b_p\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c_p\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"h\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"k\",\"type\":\"tuple\"}],\"internalType\":\"struct Verifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"mintRET\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xc398bd5094cffa39b946d8a5277ce251a40bb18e8ef3fba409ed8ea5e83fed67\",\"urls\":[\"bzz-raw://45a713c06ad484d292782aa25bddcafacccfcf09e0d1b792133f26c704878410\",\"dweb:/ipfs/QmaXL9KN7uJWmpyGZmu6JNGuxh4kmXtHvxM94CzmHLLefq\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0xec24a0fb4f9d4b35e03a997f3e4dd5887d322749090aa0a5761f92fdd8402ac9\",\"urls\":[\"bzz-raw://3d83e0758f44fd1e3dfc2e79c0d68bba3622ea764af6d8cdb9c6305ef11b488a\",\"dweb:/ipfs/QmPNE9ufkicubvZqwQ3MPNkuT6MY5fdj4icA6UDBx9LPyE\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xfbd07236fe767c218449e678ef4129d809e517e83a7cf42f73b3e8f4a795f5dc\",\"urls\":[\"bzz-raw://c3f7a23b1ec132e2126f83481508272931bcccd29b07dc2b04aa0cda6410b64f\",\"dweb:/ipfs/QmaP4J6bBtgwsNrs6UPRdErNL2U31DQtqxzu8oo4mSMGtM\"]},\"project:/contracts/verifier.sol\":{\"keccak256\":\"0xbe860ef7ab28b03abb89bd6fe4c26caada7ae1e97b9baaa50edf9f009487bd51\",\"urls\":[\"bzz-raw://267f6e021f858f3fc68f873db3c27520462605134516d865be13d75ef728ba49\",\"dweb:/ipfs/QmcEiTQtAmwFMmA3fA8kt5KqX3DzF1ktEkz7M3qLQS77pM\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200477e3803806200477e8339818101604052620000379190810190620003fd565b828281816040518060600160405280603f81526020016200473f603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3f3bc0d25569b73b8f83a7aa1967d8934d14a8236ef400ce36406a2d5cd61dd66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620000e79190620004d8565b60405180910390a160008060146101000a81548160ff021916908315150217905550620001216301ffc9a760e01b6200020360201b60201c565b620001396380ac58cd60e01b6200020360201b60201c565b6200015163780e9d6360e01b6200020360201b60201c565b82600f908051906020019062000169929190620002db565b50816010908051906020019062000182929190620002db565b5080601190805190602001906200019b929190620002db565b50620001b4635b5e139f60e01b6200020360201b60201c565b505050505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000607565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156200026f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026690620004f5565b60405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031e57805160ff19168380011785556200034f565b828001600101855582156200034f579182015b828111156200034e57825182559160200191906001019062000331565b5b5090506200035e919062000362565b5090565b6200038791905b808211156200038357600081600090555060010162000369565b5090565b90565b6000815190506200039b81620005ed565b92915050565b600082601f830112620003b357600080fd5b8151620003ca620003c48262000545565b62000517565b91508082526020830160208301858383011115620003e757600080fd5b620003f4838284620005b7565b50505092915050565b6000806000606084860312156200041357600080fd5b600084015167ffffffffffffffff8111156200042e57600080fd5b6200043c86828701620003a1565b935050602084015167ffffffffffffffff8111156200045a57600080fd5b6200046886828701620003a1565b92505060406200047b868287016200038a565b9150509250925092565b620004908162000583565b82525050565b6000620004a560168362000572565b91507f496e74657266616365206964206e6f742076616c6964000000000000000000006000830152602082019050919050565b6000602082019050620004ef600083018462000485565b92915050565b60006020820190508181036000830152620005108162000496565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156200053b57600080fd5b8060405250919050565b600067ffffffffffffffff8211156200055d57600080fd5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000620005908262000597565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b83811015620005d7578082015181840152602081019050620005ba565b83811115620005e7576000848401525b50505050565b620005f88162000583565b81146200060457600080fd5b50565b61412880620006176000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063b88d4fde1161007c578063b88d4fde146103e9578063d547cfb714610405578063e985e9c514610423578063eff5e57014610453578063f2fde38b1461046f578063f3f0cd7f1461048b57610158565b80634f6ccce7146103015780636352211e1461033157806370a0823114610361578063893d20e81461039157806395d89b41146103af578063a22cb465146103cd57610158565b806327dc297e1161011557806327dc297e146102315780632f745c591461024d5780633424b8ce1461027d57806338bbfa501461029957806340c10f19146102b557806342842e0e146102e557610158565b806301ffc9a71461015d57806306fdde031461018d578063081812fc146101ab578063095ea7b3146101db57806318160ddd146101f757806323b872dd14610215575b600080fd5b61017760048036036101729190810190613086565b6104bb565b6040516101849190613b18565b60405180910390f35b610195610523565b6040516101a29190613b33565b60405180910390f35b6101c560048036036101c091908101906130d8565b6105c5565b6040516101d29190613a96565b60405180910390f35b6101f560048036036101f09190810190612ec0565b610677565b005b6101ff6108d6565b60405161020c9190613de0565b60405180910390f35b61022f600480360361022a9190810190612dba565b6108e3565b005b61024b60048036036102469190810190612fb3565b61093c565b005b61026760048036036102629190810190612ec0565b61097f565b6040516102749190613de0565b60405180910390f35b61029760048036036102929190810190612f61565b610a28565b005b6102b360048036036102ae9190810190613007565b610bb3565b005b6102cf60048036036102ca9190810190612ec0565b610bb8565b6040516102dc9190613b18565b60405180910390f35b6102ff60048036036102fa9190810190612dba565b610c66565b005b61031b600480360361031691908101906130d8565b610c86565b6040516103289190613de0565b60405180910390f35b61034b600480360361034691908101906130d8565b610cf0565b6040516103589190613a96565b60405180910390f35b61037b60048036036103769190810190612d2c565b610d2d565b6040516103889190613de0565b60405180910390f35b610399610d7d565b6040516103a69190613a96565b60405180910390f35b6103b7610da6565b6040516103c49190613b33565b60405180910390f35b6103e760048036036103e29190810190612e84565b610e48565b005b61040360048036036103fe9190810190612e09565b610fb4565b005b61040d611010565b60405161041a9190613b33565b60405180910390f35b61043d60048036036104389190810190612d7e565b6110b2565b60405161044a9190613b18565b60405180910390f35b61046d60048036036104689190810190612efc565b611146565b005b61048960048036036104849190810190612d2c565b611403565b005b6104a560048036036104a091908101906130d8565b61159d565b6040516104b29190613b33565b60405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b5050505050905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590613bd5565b60405180910390fd5b80915050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071090613c15565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561075f57600080fd5b505afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107979190810190612d55565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107de57506107dd6107d782610cf0565b336110b2565b5b61081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490613d55565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661089083610cf0565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6108ed338261169a565b61092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390613cd5565b60405180910390fd5b61093783838361172f565b505050565b61097b828260006040519080825280601f01601f1916602001820160405280156109755781602001600182028038833980820191505090505b50610bb3565b5050565b600061098a83610d2d565b82106109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c290613b55565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a1557fe5b9060005260206000200154905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90613d15565b60405180910390fd5b600060149054906101000a900460ff1615158115151415610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490613cf5565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610b78577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610b6b9190613ab1565b60405180910390a1610bb0565b7f2117a86d7496b6aed0459f1c7ddcff93ed4ab54d2fb577eea08c310cf98fcb4e33604051610ba79190613ab1565b60405180910390a15b50565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4090613d15565b60405180910390fd5b610c538383611753565b610c5c82611774565b6001905092915050565b610c8183838360405180602001604052806000815250610fb4565b505050565b6000610c906108d6565b8210610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc890613cb5565b60405180910390fd5b60088281548110610cde57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d76600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611892565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e3e5780601f10610e1357610100808354040283529160200191610e3e565b820191906000526020600020905b815481529060010190602001808311610e2157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eae90613d95565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fa89190613b18565b60405180910390a35050565b610fbf8484846108e3565b610fcb848484846118a0565b61100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100190613bb5565b60405180910390fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110a85780601f1061107d576101008083540402835291602001916110a8565b820191906000526020600020905b81548152906001019060200180831161108b57829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60001515600060149054906101000a900460ff1615151461119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119390613d35565b60405180910390fd5b60008260000151600001518360200151600001518460400151600001518560600151600001518660800151600001518760a00151600001518860c00151600001518960e0015160000151896040516020016111ff999897969594939291906139f3565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff1660156000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190613c75565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dee1a35084846040518363ffffffff1660e01b8152600401611357929190613db5565b60206040518083038186803b15801561136f57600080fd5b505afa158015611383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113a79190810190612f8a565b6113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90613c55565b60405180910390fd5b6113f18585836119b7565b6113fb8585610bb8565b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990613d15565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f990613b75565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3f3bc0d25569b73b8f83a7aa1967d8934d14a8236ef400ce36406a2d5cd61dd66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516115929190613a96565b60405180910390a150565b60606115a882611b7e565b6115e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115de90613d75565b60405180910390fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561168e5780601f106116635761010080835404028352916020019161168e565b820191906000526020600020905b81548152906001019060200180831161167157829003601f168201915b50505050509050919050565b6000806116a683610cf0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061171557508373ffffffffffffffffffffffffffffffffffffffff166116fd846105c5565b73ffffffffffffffffffffffffffffffffffffffff16145b80611726575061172581856110b2565b5b91505092915050565b61173a838383611bf0565b6117448382611e4a565b61174e8282611fe8565b505050565b61175d82826120af565b6117678282611fe8565b6117708161222a565b5050565b61177d81611b7e565b6117bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b390613b95565b60405180910390fd5b61186860118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118555780601f1061182a57610100808354040283529160200191611855565b820191906000526020600020905b81548152906001019060200180831161183857829003601f168201915b505050505061186383612276565b6123a3565b60126000838152602001908152602001600020908051906020019061188e929190612890565b5050565b600081600001549050919050565b60006118c18473ffffffffffffffffffffffffffffffffffffffff166123e7565b6118ce57600190506119af565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161190f9493929190613acc565b602060405180830381600087803b15801561192957600080fd5b505af115801561193d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196191908101906130af565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6119bf612910565b60405180604001604052808481526020018573ffffffffffffffffffffffffffffffffffffffff1681525090508060156000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050601481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838573ffffffffffffffffffffffffffffffffffffffff167f3c84595952fd90cc12791561992f9261aebc7bb8b993431fdfbf11b75fc5e77260405160405180910390a450505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8890613c95565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf890613bf5565b60405180910390fd5b611d0a81612432565b611d51600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124f0565b611d98600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612506565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611ea26001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061252990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611f8f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f0f57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f6757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611fe19190612940565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6120b881611b7e565b1580156120f25750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b612131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161212890613c35565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121ca600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124f0565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156122be576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061239e565b600082905060005b600082146122e8578080600101915050600a82816122e057fe5b0491506122c6565b6060816040519080825280601f01601f19166020018201604052801561231d5781602001600182028038833980820191505090505b50905060006001830390505b6000861461239657600a868161233b57fe5b0660300160f81b8282806001900393508151811061235557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161238e57fe5b049550612329565b819450505050505b919050565b60606123df8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612573565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561242957506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124ed5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b61251e6001826000015461252990919063ffffffff16565b816000018190555050565b600061256b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612835565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156125cf5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612654578881815181106125fb57fe5b602001015160f81c60f81b83838060010194508151811061261857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125e6565b600090505b87518110156126c75787818151811061266e57fe5b602001015160f81c60f81b83838060010194508151811061268b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612659565b600090505b865181101561273a578681815181106126e157fe5b602001015160f81c60f81b8383806001019450815181106126fe57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126cc565b600090505b85518110156127ad5785818151811061275457fe5b602001015160f81c60f81b83838060010194508151811061277157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061273f565b600090505b8451811015612820578481815181106127c757fe5b602001015160f81c60f81b8383806001019450815181106127e457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506127b2565b82995050505050505050505095945050505050565b600083831115829061287d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128749190613b33565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106128d157805160ff19168380011785556128ff565b828001600101855582156128ff579182015b828111156128fe5782518255916020019190600101906128e3565b5b50905061290c919061296c565b5090565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b81548183558181111561296757818360005260206000209182019101612966919061296c565b5b505050565b61298e91905b8082111561298a576000816000905550600101612972565b5090565b90565b6000813590506129a081614072565b92915050565b6000815190506129b581614072565b92915050565b600082601f8301126129cc57600080fd5b60026129df6129da82613e28565b613dfb565b915081838560208402820111156129f557600080fd5b60005b83811015612a255781612a0b8882612d17565b8452602084019350602083019250506001810190506129f8565b5050505092915050565b600082601f830112612a4057600080fd5b6002612a53612a4e82613e4a565b613dfb565b91508183856020840282011115612a6957600080fd5b60005b83811015612a995781612a7f8882612d17565b845260208401935060208301925050600181019050612a6c565b5050505092915050565b600081359050612ab281614089565b92915050565b600081519050612ac781614089565b92915050565b600081359050612adc816140a0565b92915050565b600081359050612af1816140b7565b92915050565b600081519050612b06816140b7565b92915050565b600082601f830112612b1d57600080fd5b8135612b30612b2b82613e6c565b613dfb565b91508082526020830160208301858383011115612b4c57600080fd5b612b57838284614015565b50505092915050565b600082601f830112612b7157600080fd5b8135612b84612b7f82613e98565b613dfb565b91508082526020830160208301858383011115612ba057600080fd5b612bab838284614015565b50505092915050565b600060408284031215612bc657600080fd5b612bd06040613dfb565b90506000612be084828501612d17565b6000830152506020612bf484828501612d17565b60208301525092915050565b600060808284031215612c1257600080fd5b612c1c6040613dfb565b90506000612c2c848285016129bb565b6000830152506040612c40848285016129bb565b60208301525092915050565b60006102408284031215612c5f57600080fd5b612c6a610100613dfb565b90506000612c7a84828501612bb4565b6000830152506040612c8e84828501612bb4565b6020830152506080612ca284828501612c00565b604083015250610100612cb784828501612bb4565b606083015250610140612ccc84828501612bb4565b608083015250610180612ce184828501612bb4565b60a0830152506101c0612cf684828501612bb4565b60c083015250610200612d0b84828501612bb4565b60e08301525092915050565b600081359050612d26816140ce565b92915050565b600060208284031215612d3e57600080fd5b6000612d4c84828501612991565b91505092915050565b600060208284031215612d6757600080fd5b6000612d75848285016129a6565b91505092915050565b60008060408385031215612d9157600080fd5b6000612d9f85828601612991565b9250506020612db085828601612991565b9150509250929050565b600080600060608486031215612dcf57600080fd5b6000612ddd86828701612991565b9350506020612dee86828701612991565b9250506040612dff86828701612d17565b9150509250925092565b60008060008060808587031215612e1f57600080fd5b6000612e2d87828801612991565b9450506020612e3e87828801612991565b9350506040612e4f87828801612d17565b925050606085013567ffffffffffffffff811115612e6c57600080fd5b612e7887828801612b0c565b91505092959194509250565b60008060408385031215612e9757600080fd5b6000612ea585828601612991565b9250506020612eb685828601612aa3565b9150509250929050565b60008060408385031215612ed357600080fd5b6000612ee185828601612991565b9250506020612ef285828601612d17565b9150509250929050565b6000806000806102c08587031215612f1357600080fd5b6000612f2187828801612991565b9450506020612f3287828801612d17565b9350506040612f4387828801612c4c565b925050610280612f5587828801612a2f565b91505092959194509250565b600060208284031215612f7357600080fd5b6000612f8184828501612aa3565b91505092915050565b600060208284031215612f9c57600080fd5b6000612faa84828501612ab8565b91505092915050565b60008060408385031215612fc657600080fd5b6000612fd485828601612acd565b925050602083013567ffffffffffffffff811115612ff157600080fd5b612ffd85828601612b60565b9150509250929050565b60008060006060848603121561301c57600080fd5b600061302a86828701612acd565b935050602084013567ffffffffffffffff81111561304757600080fd5b61305386828701612b60565b925050604084013567ffffffffffffffff81111561307057600080fd5b61307c86828701612b0c565b9150509250925092565b60006020828403121561309857600080fd5b60006130a684828501612ae2565b91505092915050565b6000602082840312156130c157600080fd5b60006130cf84828501612af7565b91505092915050565b6000602082840312156130ea57600080fd5b60006130f884828501612d17565b91505092915050565b600061310d83836139af565b60208301905092915050565b600061312583836139cd565b60208301905092915050565b61313a81613fdf565b82525050565b61314981613f61565b82525050565b61315881613ee3565b6131628184613f29565b925061316d82613ece565b8060005b8381101561319e5781516131858782613101565b965061319083613f11565b925050600181019050613171565b505050505050565b6131af81613ee3565b6131b98184613f34565b92506131c482613ece565b8060005b838110156131f55781516131dc8782613119565b96506131e783613f11565b9250506001810190506131c8565b505050505050565b61320681613ed8565b6132108184613f1e565b925061321b82613ec4565b8060005b8381101561324c5781516132338782613101565b965061323e83613f04565b92505060018101905061321f565b505050505050565b61325d81613ed8565b6132678184613f34565b925061327282613ec4565b8060005b838110156132a357815161328a8782613119565b965061329583613f04565b925050600181019050613276565b505050505050565b6132b481613f73565b82525050565b60006132c582613eee565b6132cf8185613f3f565b93506132df818560208601614024565b6132e881614061565b840191505092915050565b60006132fe82613ef9565b6133088185613f50565b9350613318818560208601614024565b61332181614061565b840191505092915050565b6000613339601a83613f50565b91507f496e646578206973206d6f7265207468616e2062616c616e63650000000000006000830152602082019050919050565b6000613379601483613f50565b91507f41646472657373206973206e6f742076616c69640000000000000000000000006000830152602082019050919050565b60006133b9602283613f50565b91507f546f6b656e20696420646f6573206e6f7420657869737420696e20736574205560008301527f52490000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061341f601783613f50565b91507f436865636b206f6e2045524337323120206661696c65640000000000000000006000830152602082019050919050565b600061345f601783613f50565b91507f417070726f76616c20646f6573206e6f742065786973740000000000000000006000830152602082019050919050565b600061349f601683613f50565b91507f20546f206164647265737320697320696e76616c6964000000000000000000006000830152602082019050919050565b60006134df601783613f50565b91507f416c72656164792074686520746f6b656e206f776e65720000000000000000006000830152602082019050919050565b600061351f602783613f50565b91507f20546f6b656e20657869737473206f722074686520616464726573732069732060008301527f696e76616c6964000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613585600f83613f50565b91507f50726f6f6620696e636f727265637400000000000000000000000000000000006000830152602082019050919050565b60006135c5601283613f50565b91507f416c726561647920757365642050726f6f6600000000000000000000000000006000830152602082019050919050565b6000613605602683613f50565b91507f46726f6d2061646472657373206973206e6f74206f776e6572206f662074686560008301527f20746f6b656e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061366b601f83613f50565b91507f496e646578206973206d6f7265207468616e20746f74616c20737570706c79006000830152602082019050919050565b60006136ab602083613f50565b91507f4f776e6572206f7220417070726f766564206e6f742073656e64696e672054786000830152602082019050919050565b60006136eb602583613f50565b91507f5061757365207374617475732073656e74206973206578697374696e6720616c60008301527f72656164790000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613751601c83613f50565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b6000613791601283613f50565b91507f436f6e74726163742069732070617573656400000000000000000000000000006000830152602082019050919050565b60006137d1601683613f50565b91507f53656e646572206973206e6f7420617070726f766564000000000000000000006000830152602082019050919050565b6000613811601783613f50565b91507f546f6b656e20696420646f6573206e6f742065786973740000000000000000006000830152602082019050919050565b6000613851602283613f50565b91507f53656e6465722069732073616d6520617320617070726f76616c20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516138c060008501826139af565b5060208201516138d360208501826139af565b50505050565b6080820160008201516138ef60008501826131fd565b50602082015161390260408501826131fd565b50505050565b6102408201600082015161391f60008501826138aa565b50602082015161393260408501826138aa565b50604082015161394560808501826138d9565b5060608201516139596101008501826138aa565b50608082015161396d6101408501826138aa565b5060a08201516139816101808501826138aa565b5060c08201516139956101c08501826138aa565b5060e08201516139a96102008501826138aa565b50505050565b6139b881613fd5565b82525050565b6139c781613fd5565b82525050565b6139d681613fd5565b82525050565b6139ed6139e882613fd5565b614057565b82525050565b60006139ff828c6139dc565b602082019150613a0f828b6139dc565b602082019150613a1f828a613254565b604082019150613a2f82896139dc565b602082019150613a3f82886139dc565b602082019150613a4f82876139dc565b602082019150613a5f82866139dc565b602082019150613a6f82856139dc565b602082019150613a7f82846131a6565b6040820191508190509a9950505050505050505050565b6000602082019050613aab6000830184613140565b92915050565b6000602082019050613ac66000830184613131565b92915050565b6000608082019050613ae16000830187613131565b613aee6020830186613140565b613afb60408301856139be565b8181036060830152613b0d81846132ba565b905095945050505050565b6000602082019050613b2d60008301846132ab565b92915050565b60006020820190508181036000830152613b4d81846132f3565b905092915050565b60006020820190508181036000830152613b6e8161332c565b9050919050565b60006020820190508181036000830152613b8e8161336c565b9050919050565b60006020820190508181036000830152613bae816133ac565b9050919050565b60006020820190508181036000830152613bce81613412565b9050919050565b60006020820190508181036000830152613bee81613452565b9050919050565b60006020820190508181036000830152613c0e81613492565b9050919050565b60006020820190508181036000830152613c2e816134d2565b9050919050565b60006020820190508181036000830152613c4e81613512565b9050919050565b60006020820190508181036000830152613c6e81613578565b9050919050565b60006020820190508181036000830152613c8e816135b8565b9050919050565b60006020820190508181036000830152613cae816135f8565b9050919050565b60006020820190508181036000830152613cce8161365e565b9050919050565b60006020820190508181036000830152613cee8161369e565b9050919050565b60006020820190508181036000830152613d0e816136de565b9050919050565b60006020820190508181036000830152613d2e81613744565b9050919050565b60006020820190508181036000830152613d4e81613784565b9050919050565b60006020820190508181036000830152613d6e816137c4565b9050919050565b60006020820190508181036000830152613d8e81613804565b9050919050565b60006020820190508181036000830152613dae81613844565b9050919050565b600061028082019050613dcb6000830185613908565b613dd961024083018461314f565b9392505050565b6000602082019050613df560008301846139be565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613e1e57600080fd5b8060405250919050565b600067ffffffffffffffff821115613e3f57600080fd5b602082029050919050565b600067ffffffffffffffff821115613e6157600080fd5b602082029050919050565b600067ffffffffffffffff821115613e8357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613eaf57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613f6c82613fb5565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613fea82613ff1565b9050919050565b6000613ffc82614003565b9050919050565b600061400e82613fb5565b9050919050565b82818337600083830152505050565b60005b83811015614042578082015181840152602081019050614027565b83811115614051576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61407b81613f61565b811461408657600080fd5b50565b61409281613f73565b811461409d57600080fd5b50565b6140a981613f7f565b81146140b457600080fd5b50565b6140c081613f89565b81146140cb57600080fd5b50565b6140d781613fd5565b81146140e257600080fd5b5056fea365627a7a72315820cdf9202a3d7f4678dec3d78a4f39bd89732cde5db1f8dcfeac51a90a707c46856c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80634f6ccce7116100c3578063b88d4fde1161007c578063b88d4fde146103e9578063d547cfb714610405578063e985e9c514610423578063eff5e57014610453578063f2fde38b1461046f578063f3f0cd7f1461048b57610158565b80634f6ccce7146103015780636352211e1461033157806370a0823114610361578063893d20e81461039157806395d89b41146103af578063a22cb465146103cd57610158565b806327dc297e1161011557806327dc297e146102315780632f745c591461024d5780633424b8ce1461027d57806338bbfa501461029957806340c10f19146102b557806342842e0e146102e557610158565b806301ffc9a71461015d57806306fdde031461018d578063081812fc146101ab578063095ea7b3146101db57806318160ddd146101f757806323b872dd14610215575b600080fd5b61017760048036036101729190810190613086565b6104bb565b6040516101849190613b18565b60405180910390f35b610195610523565b6040516101a29190613b33565b60405180910390f35b6101c560048036036101c091908101906130d8565b6105c5565b6040516101d29190613a96565b60405180910390f35b6101f560048036036101f09190810190612ec0565b610677565b005b6101ff6108d6565b60405161020c9190613de0565b60405180910390f35b61022f600480360361022a9190810190612dba565b6108e3565b005b61024b60048036036102469190810190612fb3565b61093c565b005b61026760048036036102629190810190612ec0565b61097f565b6040516102749190613de0565b60405180910390f35b61029760048036036102929190810190612f61565b610a28565b005b6102b360048036036102ae9190810190613007565b610bb3565b005b6102cf60048036036102ca9190810190612ec0565b610bb8565b6040516102dc9190613b18565b60405180910390f35b6102ff60048036036102fa9190810190612dba565b610c66565b005b61031b600480360361031691908101906130d8565b610c86565b6040516103289190613de0565b60405180910390f35b61034b600480360361034691908101906130d8565b610cf0565b6040516103589190613a96565b60405180910390f35b61037b60048036036103769190810190612d2c565b610d2d565b6040516103889190613de0565b60405180910390f35b610399610d7d565b6040516103a69190613a96565b60405180910390f35b6103b7610da6565b6040516103c49190613b33565b60405180910390f35b6103e760048036036103e29190810190612e84565b610e48565b005b61040360048036036103fe9190810190612e09565b610fb4565b005b61040d611010565b60405161041a9190613b33565b60405180910390f35b61043d60048036036104389190810190612d7e565b6110b2565b60405161044a9190613b18565b60405180910390f35b61046d60048036036104689190810190612efc565b611146565b005b61048960048036036104849190810190612d2c565b611403565b005b6104a560048036036104a091908101906130d8565b61159d565b6040516104b29190613b33565b60405180910390f35b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105bb5780601f10610590576101008083540402835291602001916105bb565b820191906000526020600020905b81548152906001019060200180831161059e57829003601f168201915b5050505050905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590613bd5565b60405180910390fd5b80915050919050565b8173ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071090613c15565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663893d20e86040518163ffffffff1660e01b815260040160206040518083038186803b15801561075f57600080fd5b505afa158015610773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107979190810190612d55565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107de57506107dd6107d782610cf0565b336110b2565b5b61081d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081490613d55565b60405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661089083610cf0565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6108ed338261169a565b61092c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092390613cd5565b60405180910390fd5b61093783838361172f565b505050565b61097b828260006040519080825280601f01601f1916602001820160405280156109755781602001600182028038833980820191505090505b50610bb3565b5050565b600061098a83610d2d565b82106109cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c290613b55565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610a1557fe5b9060005260206000200154905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae90613d15565b60405180910390fd5b600060149054906101000a900460ff1615158115151415610b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0490613cf5565b60405180910390fd5b80600060146101000a81548160ff021916908315150217905550600060149054906101000a900460ff1615610b78577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610b6b9190613ab1565b60405180910390a1610bb0565b7f2117a86d7496b6aed0459f1c7ddcff93ed4ab54d2fb577eea08c310cf98fcb4e33604051610ba79190613ab1565b60405180910390a15b50565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4090613d15565b60405180910390fd5b610c538383611753565b610c5c82611774565b6001905092915050565b610c8183838360405180602001604052806000815250610fb4565b505050565b6000610c906108d6565b8210610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc890613cb5565b60405180910390fd5b60088281548110610cde57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610d76600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611892565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e3e5780601f10610e1357610100808354040283529160200191610e3e565b820191906000526020600020905b815481529060010190602001808311610e2157829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eae90613d95565b60405180910390fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610fa89190613b18565b60405180910390a35050565b610fbf8484846108e3565b610fcb848484846118a0565b61100a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100190613bb5565b60405180910390fd5b50505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110a85780601f1061107d576101008083540402835291602001916110a8565b820191906000526020600020905b81548152906001019060200180831161108b57829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60001515600060149054906101000a900460ff1615151461119c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119390613d35565b60405180910390fd5b60008260000151600001518360200151600001518460400151600001518560600151600001518660800151600001518760a00151600001518860c00151600001518960e0015160000151896040516020016111ff999897969594939291906139f3565b604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff1660156000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190613c75565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dee1a35084846040518363ffffffff1660e01b8152600401611357929190613db5565b60206040518083038186803b15801561136f57600080fd5b505afa158015611383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113a79190810190612f8a565b6113e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113dd90613c55565b60405180910390fd5b6113f18585836119b7565b6113fb8585610bb8565b505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990613d15565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f990613b75565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3f3bc0d25569b73b8f83a7aa1967d8934d14a8236ef400ce36406a2d5cd61dd66000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516115929190613a96565b60405180910390a150565b60606115a882611b7e565b6115e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115de90613d75565b60405180910390fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561168e5780601f106116635761010080835404028352916020019161168e565b820191906000526020600020905b81548152906001019060200180831161167157829003601f168201915b50505050509050919050565b6000806116a683610cf0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061171557508373ffffffffffffffffffffffffffffffffffffffff166116fd846105c5565b73ffffffffffffffffffffffffffffffffffffffff16145b80611726575061172581856110b2565b5b91505092915050565b61173a838383611bf0565b6117448382611e4a565b61174e8282611fe8565b505050565b61175d82826120af565b6117678282611fe8565b6117708161222a565b5050565b61177d81611b7e565b6117bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117b390613b95565b60405180910390fd5b61186860118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118555780601f1061182a57610100808354040283529160200191611855565b820191906000526020600020905b81548152906001019060200180831161183857829003601f168201915b505050505061186383612276565b6123a3565b60126000838152602001908152602001600020908051906020019061188e929190612890565b5050565b600081600001549050919050565b60006118c18473ffffffffffffffffffffffffffffffffffffffff166123e7565b6118ce57600190506119af565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161190f9493929190613acc565b602060405180830381600087803b15801561192957600080fd5b505af115801561193d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196191908101906130af565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6119bf612910565b60405180604001604052808481526020018573ffffffffffffffffffffffffffffffffffffffff1681525090508060156000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050601481908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838573ffffffffffffffffffffffffffffffffffffffff167f3c84595952fd90cc12791561992f9261aebc7bb8b993431fdfbf11b75fc5e77260405160405180910390a450505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6002600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611c91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8890613c95565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cf890613bf5565b60405180910390fd5b611d0a81612432565b611d51600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124f0565b611d98600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612506565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611ea26001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061252990919063ffffffff16565b9050600060076000848152602001908152602001600020549050818114611f8f576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f0f57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110611f6757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611fe19190612940565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b6120b881611b7e565b1580156120f25750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b612131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161212890613c35565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121ca600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206124f0565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156122be576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061239e565b600082905060005b600082146122e8578080600101915050600a82816122e057fe5b0491506122c6565b6060816040519080825280601f01601f19166020018201604052801561231d5781602001600182028038833980820191505090505b50905060006001830390505b6000861461239657600a868161233b57fe5b0660300160f81b8282806001900393508151811061235557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161238e57fe5b049550612329565b819450505050505b919050565b60606123df8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612573565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561242957506000801b8214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124ed5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001816000016000828254019250508190555050565b61251e6001826000015461252990919063ffffffff16565b816000018190555050565b600061256b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612835565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156125cf5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612654578881815181106125fb57fe5b602001015160f81c60f81b83838060010194508151811061261857fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125e6565b600090505b87518110156126c75787818151811061266e57fe5b602001015160f81c60f81b83838060010194508151811061268b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612659565b600090505b865181101561273a578681815181106126e157fe5b602001015160f81c60f81b8383806001019450815181106126fe57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126cc565b600090505b85518110156127ad5785818151811061275457fe5b602001015160f81c60f81b83838060010194508151811061277157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061273f565b600090505b8451811015612820578481815181106127c757fe5b602001015160f81c60f81b8383806001019450815181106127e457fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506127b2565b82995050505050505050505095945050505050565b600083831115829061287d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128749190613b33565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106128d157805160ff19168380011785556128ff565b828001600101855582156128ff579182015b828111156128fe5782518255916020019190600101906128e3565b5b50905061290c919061296c565b5090565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b81548183558181111561296757818360005260206000209182019101612966919061296c565b5b505050565b61298e91905b8082111561298a576000816000905550600101612972565b5090565b90565b6000813590506129a081614072565b92915050565b6000815190506129b581614072565b92915050565b600082601f8301126129cc57600080fd5b60026129df6129da82613e28565b613dfb565b915081838560208402820111156129f557600080fd5b60005b83811015612a255781612a0b8882612d17565b8452602084019350602083019250506001810190506129f8565b5050505092915050565b600082601f830112612a4057600080fd5b6002612a53612a4e82613e4a565b613dfb565b91508183856020840282011115612a6957600080fd5b60005b83811015612a995781612a7f8882612d17565b845260208401935060208301925050600181019050612a6c565b5050505092915050565b600081359050612ab281614089565b92915050565b600081519050612ac781614089565b92915050565b600081359050612adc816140a0565b92915050565b600081359050612af1816140b7565b92915050565b600081519050612b06816140b7565b92915050565b600082601f830112612b1d57600080fd5b8135612b30612b2b82613e6c565b613dfb565b91508082526020830160208301858383011115612b4c57600080fd5b612b57838284614015565b50505092915050565b600082601f830112612b7157600080fd5b8135612b84612b7f82613e98565b613dfb565b91508082526020830160208301858383011115612ba057600080fd5b612bab838284614015565b50505092915050565b600060408284031215612bc657600080fd5b612bd06040613dfb565b90506000612be084828501612d17565b6000830152506020612bf484828501612d17565b60208301525092915050565b600060808284031215612c1257600080fd5b612c1c6040613dfb565b90506000612c2c848285016129bb565b6000830152506040612c40848285016129bb565b60208301525092915050565b60006102408284031215612c5f57600080fd5b612c6a610100613dfb565b90506000612c7a84828501612bb4565b6000830152506040612c8e84828501612bb4565b6020830152506080612ca284828501612c00565b604083015250610100612cb784828501612bb4565b606083015250610140612ccc84828501612bb4565b608083015250610180612ce184828501612bb4565b60a0830152506101c0612cf684828501612bb4565b60c083015250610200612d0b84828501612bb4565b60e08301525092915050565b600081359050612d26816140ce565b92915050565b600060208284031215612d3e57600080fd5b6000612d4c84828501612991565b91505092915050565b600060208284031215612d6757600080fd5b6000612d75848285016129a6565b91505092915050565b60008060408385031215612d9157600080fd5b6000612d9f85828601612991565b9250506020612db085828601612991565b9150509250929050565b600080600060608486031215612dcf57600080fd5b6000612ddd86828701612991565b9350506020612dee86828701612991565b9250506040612dff86828701612d17565b9150509250925092565b60008060008060808587031215612e1f57600080fd5b6000612e2d87828801612991565b9450506020612e3e87828801612991565b9350506040612e4f87828801612d17565b925050606085013567ffffffffffffffff811115612e6c57600080fd5b612e7887828801612b0c565b91505092959194509250565b60008060408385031215612e9757600080fd5b6000612ea585828601612991565b9250506020612eb685828601612aa3565b9150509250929050565b60008060408385031215612ed357600080fd5b6000612ee185828601612991565b9250506020612ef285828601612d17565b9150509250929050565b6000806000806102c08587031215612f1357600080fd5b6000612f2187828801612991565b9450506020612f3287828801612d17565b9350506040612f4387828801612c4c565b925050610280612f5587828801612a2f565b91505092959194509250565b600060208284031215612f7357600080fd5b6000612f8184828501612aa3565b91505092915050565b600060208284031215612f9c57600080fd5b6000612faa84828501612ab8565b91505092915050565b60008060408385031215612fc657600080fd5b6000612fd485828601612acd565b925050602083013567ffffffffffffffff811115612ff157600080fd5b612ffd85828601612b60565b9150509250929050565b60008060006060848603121561301c57600080fd5b600061302a86828701612acd565b935050602084013567ffffffffffffffff81111561304757600080fd5b61305386828701612b60565b925050604084013567ffffffffffffffff81111561307057600080fd5b61307c86828701612b0c565b9150509250925092565b60006020828403121561309857600080fd5b60006130a684828501612ae2565b91505092915050565b6000602082840312156130c157600080fd5b60006130cf84828501612af7565b91505092915050565b6000602082840312156130ea57600080fd5b60006130f884828501612d17565b91505092915050565b600061310d83836139af565b60208301905092915050565b600061312583836139cd565b60208301905092915050565b61313a81613fdf565b82525050565b61314981613f61565b82525050565b61315881613ee3565b6131628184613f29565b925061316d82613ece565b8060005b8381101561319e5781516131858782613101565b965061319083613f11565b925050600181019050613171565b505050505050565b6131af81613ee3565b6131b98184613f34565b92506131c482613ece565b8060005b838110156131f55781516131dc8782613119565b96506131e783613f11565b9250506001810190506131c8565b505050505050565b61320681613ed8565b6132108184613f1e565b925061321b82613ec4565b8060005b8381101561324c5781516132338782613101565b965061323e83613f04565b92505060018101905061321f565b505050505050565b61325d81613ed8565b6132678184613f34565b925061327282613ec4565b8060005b838110156132a357815161328a8782613119565b965061329583613f04565b925050600181019050613276565b505050505050565b6132b481613f73565b82525050565b60006132c582613eee565b6132cf8185613f3f565b93506132df818560208601614024565b6132e881614061565b840191505092915050565b60006132fe82613ef9565b6133088185613f50565b9350613318818560208601614024565b61332181614061565b840191505092915050565b6000613339601a83613f50565b91507f496e646578206973206d6f7265207468616e2062616c616e63650000000000006000830152602082019050919050565b6000613379601483613f50565b91507f41646472657373206973206e6f742076616c69640000000000000000000000006000830152602082019050919050565b60006133b9602283613f50565b91507f546f6b656e20696420646f6573206e6f7420657869737420696e20736574205560008301527f52490000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061341f601783613f50565b91507f436865636b206f6e2045524337323120206661696c65640000000000000000006000830152602082019050919050565b600061345f601783613f50565b91507f417070726f76616c20646f6573206e6f742065786973740000000000000000006000830152602082019050919050565b600061349f601683613f50565b91507f20546f206164647265737320697320696e76616c6964000000000000000000006000830152602082019050919050565b60006134df601783613f50565b91507f416c72656164792074686520746f6b656e206f776e65720000000000000000006000830152602082019050919050565b600061351f602783613f50565b91507f20546f6b656e20657869737473206f722074686520616464726573732069732060008301527f696e76616c6964000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613585600f83613f50565b91507f50726f6f6620696e636f727265637400000000000000000000000000000000006000830152602082019050919050565b60006135c5601283613f50565b91507f416c726561647920757365642050726f6f6600000000000000000000000000006000830152602082019050919050565b6000613605602683613f50565b91507f46726f6d2061646472657373206973206e6f74206f776e6572206f662074686560008301527f20746f6b656e00000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061366b601f83613f50565b91507f496e646578206973206d6f7265207468616e20746f74616c20737570706c79006000830152602082019050919050565b60006136ab602083613f50565b91507f4f776e6572206f7220417070726f766564206e6f742073656e64696e672054786000830152602082019050919050565b60006136eb602583613f50565b91507f5061757365207374617475732073656e74206973206578697374696e6720616c60008301527f72656164790000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613751601c83613f50565b91507f43616c6c6572206973206e6f7420636f6e7472616374206f776e6572000000006000830152602082019050919050565b6000613791601283613f50565b91507f436f6e74726163742069732070617573656400000000000000000000000000006000830152602082019050919050565b60006137d1601683613f50565b91507f53656e646572206973206e6f7420617070726f766564000000000000000000006000830152602082019050919050565b6000613811601783613f50565b91507f546f6b656e20696420646f6573206e6f742065786973740000000000000000006000830152602082019050919050565b6000613851602283613f50565b91507f53656e6465722069732073616d6520617320617070726f76616c20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516138c060008501826139af565b5060208201516138d360208501826139af565b50505050565b6080820160008201516138ef60008501826131fd565b50602082015161390260408501826131fd565b50505050565b6102408201600082015161391f60008501826138aa565b50602082015161393260408501826138aa565b50604082015161394560808501826138d9565b5060608201516139596101008501826138aa565b50608082015161396d6101408501826138aa565b5060a08201516139816101808501826138aa565b5060c08201516139956101c08501826138aa565b5060e08201516139a96102008501826138aa565b50505050565b6139b881613fd5565b82525050565b6139c781613fd5565b82525050565b6139d681613fd5565b82525050565b6139ed6139e882613fd5565b614057565b82525050565b60006139ff828c6139dc565b602082019150613a0f828b6139dc565b602082019150613a1f828a613254565b604082019150613a2f82896139dc565b602082019150613a3f82886139dc565b602082019150613a4f82876139dc565b602082019150613a5f82866139dc565b602082019150613a6f82856139dc565b602082019150613a7f82846131a6565b6040820191508190509a9950505050505050505050565b6000602082019050613aab6000830184613140565b92915050565b6000602082019050613ac66000830184613131565b92915050565b6000608082019050613ae16000830187613131565b613aee6020830186613140565b613afb60408301856139be565b8181036060830152613b0d81846132ba565b905095945050505050565b6000602082019050613b2d60008301846132ab565b92915050565b60006020820190508181036000830152613b4d81846132f3565b905092915050565b60006020820190508181036000830152613b6e8161332c565b9050919050565b60006020820190508181036000830152613b8e8161336c565b9050919050565b60006020820190508181036000830152613bae816133ac565b9050919050565b60006020820190508181036000830152613bce81613412565b9050919050565b60006020820190508181036000830152613bee81613452565b9050919050565b60006020820190508181036000830152613c0e81613492565b9050919050565b60006020820190508181036000830152613c2e816134d2565b9050919050565b60006020820190508181036000830152613c4e81613512565b9050919050565b60006020820190508181036000830152613c6e81613578565b9050919050565b60006020820190508181036000830152613c8e816135b8565b9050919050565b60006020820190508181036000830152613cae816135f8565b9050919050565b60006020820190508181036000830152613cce8161365e565b9050919050565b60006020820190508181036000830152613cee8161369e565b9050919050565b60006020820190508181036000830152613d0e816136de565b9050919050565b60006020820190508181036000830152613d2e81613744565b9050919050565b60006020820190508181036000830152613d4e81613784565b9050919050565b60006020820190508181036000830152613d6e816137c4565b9050919050565b60006020820190508181036000830152613d8e81613804565b9050919050565b60006020820190508181036000830152613dae81613844565b9050919050565b600061028082019050613dcb6000830185613908565b613dd961024083018461314f565b9392505050565b6000602082019050613df560008301846139be565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613e1e57600080fd5b8060405250919050565b600067ffffffffffffffff821115613e3f57600080fd5b602082029050919050565b600067ffffffffffffffff821115613e6157600080fd5b602082029050919050565b600067ffffffffffffffff821115613e8357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613eaf57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613f6c82613fb5565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613fea82613ff1565b9050919050565b6000613ffc82614003565b9050919050565b600061400e82613fb5565b9050919050565b82818337600083830152505050565b60005b83811015614042578082015181840152602081019050614027565b83811115614051576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b61407b81613f61565b811461408657600080fd5b50565b61409281613f73565b811461409d57600080fd5b50565b6140a981613f7f565b81146140b457600080fd5b50565b6140c081613f89565b81146140cb57600080fd5b50565b6140d781613fd5565b81146140e257600080fd5b5056fea365627a7a72315820cdf9202a3d7f4678dec3d78a4f39bd89732cde5db1f8dcfeac51a90a707c46856c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "336:2105:7:-;;;538:190;8:9:-1;5:2;;;30:1;27;20:12;5:2;538:190:7;;;;;;;;;;;;;;;;;;;;;;;;645:4;651:6;23349:4:4;23355:6;21042:285;;;;;;;;;;;;;;;;;994:10;985:6;;:19;;;;;;;;;;;;;;;;;;1020:24;1037:6;;;;;;;;;;;1020:24;;;;;;;;;;;;;;;2340:5;2330:7;;:15;;;;;;;;;;;;;;;;;;3389:40;2970:10;3408:20;;3389:18;;;:40;;:::i;:::-;5615;5485:10;5634:20;;5615:18;;;:40;;:::i;:::-;13517:51;13110:10;13536:31;;13517:18;;;:51;;:::i;:::-;21191:4;21185:5;:10;;;;;;;;;;;;:::i;:::-;;21214:6;21206:7;:14;;;;;;;;;;;;:::i;:::-;;21245:12;21231:13;:26;;;;;;;;;;;;:::i;:::-;;21270:49;20844:10;21289:29;;21270:18;;;:49;;:::i;:::-;21042:285;;;23273:178;;704:15:7;676:16;;:44;;;;;;;;;;;;;;;;;;538:190;;;336:2105;;3752:187:4;3843:10;3828:25;;:11;:25;;;;;3820:60;;;;;;;;;;;;;;;;;;;;;;3927:4;3891:20;:33;3912:11;3891:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3752:187;:::o;336:2105:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:444;;260:3;253:4;245:6;241:17;237:27;227:2;;278:1;275;268:12;227:2;308:6;302:13;330:65;345:49;387:6;345:49;;;330:65;;;321:74;;415:6;408:5;401:21;451:4;443:6;439:17;484:4;477:5;473:16;519:3;510:6;505:3;501:16;498:25;495:2;;;536:1;533;526:12;495:2;546:39;578:6;573:3;568;546:39;;;220:371;;;;;;;;599:733;;;;768:2;756:9;747:7;743:23;739:32;736:2;;;784:1;781;774:12;736:2;840:1;829:9;825:17;819:24;863:18;855:6;852:30;849:2;;;895:1;892;885:12;849:2;915:74;981:7;972:6;961:9;957:22;915:74;;;905:84;;798:197;1047:2;1036:9;1032:18;1026:25;1071:18;1063:6;1060:30;1057:2;;;1103:1;1100;1093:12;1057:2;1123:74;1189:7;1180:6;1169:9;1165:22;1123:74;;;1113:84;;1005:198;1234:2;1252:64;1308:7;1299:6;1288:9;1284:22;1252:64;;;1242:74;;1213:109;730:602;;;;;;1339:113;1422:24;1440:5;1422:24;;;1417:3;1410:37;1404:48;;;1460:322;;1620:67;1684:2;1679:3;1620:67;;;1613:74;;1720:24;1716:1;1711:3;1707:11;1700:45;1773:2;1768:3;1764:12;1757:19;;1606:176;;;;1790:213;;1908:2;1897:9;1893:18;1885:26;;1922:71;1990:1;1979:9;1975:17;1966:6;1922:71;;;1879:124;;;;;2010:407;;2201:2;2190:9;2186:18;2178:26;;2251:9;2245:4;2241:20;2237:1;2226:9;2222:17;2215:47;2276:131;2402:4;2276:131;;;2268:139;;2172:245;;;;2424:256;;2486:2;2480:9;2470:19;;2524:4;2516:6;2512:17;2623:6;2611:10;2608:22;2587:18;2575:10;2572:34;2569:62;2566:2;;;2644:1;2641;2634:12;2566:2;2664:10;2660:2;2653:22;2464:216;;;;;2687:322;;2831:18;2823:6;2820:30;2817:2;;;2863:1;2860;2853:12;2817:2;2930:4;2926:9;2919:4;2911:6;2907:17;2903:33;2895:41;;2994:4;2988;2984:15;2976:23;;2754:255;;;;3017:163;;3132:6;3127:3;3120:19;3169:4;3164:3;3160:14;3145:29;;3113:67;;;;;3188:91;;3250:24;3268:5;3250:24;;;3239:35;;3233:46;;;;3286:121;;3359:42;3352:5;3348:54;3337:65;;3331:76;;;;3415:268;3480:1;3487:101;3501:6;3498:1;3495:13;3487:101;;;3577:1;3572:3;3568:11;3562:18;3558:1;3553:3;3549:11;3542:39;3523:2;3520:1;3516:10;3511:15;;3487:101;;;3603:6;3600:1;3597:13;3594:2;;;3668:1;3659:6;3654:3;3650:16;3643:27;3594:2;3464:219;;;;;3691:117;3760:24;3778:5;3760:24;;;3753:5;3750:35;3740:2;;3799:1;3796;3789:12;3740:2;3734:74;;336:2105:7;;;;;;;",
  "deployedSourceMap": "336:2105:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:2105:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3533:135:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;21419:83;;;:::i;:::-;;;;;;;;;;;;;;;;6869:266;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6211:650;;;;;;;;;;;;;;;;:::i;:::-;;14330:96;;;:::i;:::-;;;;;;;;;;;;;;;;8174:220;;;;;;;;;;;;;;;;:::i;:::-;;15167:129:6;;;;;;;;;;;;;;;;:::i;:::-;;13957:215:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2587:302;;;;;;;;;;;;;;;;:::i;:::-;;15304:181:6;;;;;;;;;;;;;;;;:::i;:::-;;23459:176:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8402:134;;;;;;;;;;;;;;;;:::i;:::-;;14771:186;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5969:166;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5671:290;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1188:80;;;:::i;:::-;;;;;;;;;;;;;;;;21510:87;;;:::i;:::-;;;;;;;;;;;;;;;;7435:255;;;;;;;;;;;;;;;;:::i;:::-;;8544:241;;;;;;;;;;;;;;;;:::i;:::-;;21605:99;;;:::i;:::-;;;;;;;;;;;;;;;;8019:147;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1851:587:7;;;;;;;;;;;;;;;;:::i;:::-;;1276:347:4;;;;;;;;;;;;;;;;:::i;:::-;;21712:184;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3533:135;3603:4;3627:20;:33;3648:11;3627:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3620:40;;3533:135;;;:::o;21419:83::-;21457:13;21489:5;21482:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21419:83;:::o;6869:266::-;6928:7;7002:13;7018:11;:20;7030:7;7018:20;;;;;;;;;;;;;;;;;;;;;7002:36;;7074:1;7057:19;;:5;:19;;;;7049:55;;;;;;;;;;;;;;;;;;;;;;7122:5;7115:12;;;6869:266;;;:::o;6211:650::-;6401:2;6377:26;;:11;:20;6389:7;6377:20;;;;;;;;;;;;;;;;;;;;;:26;;;;6369:62;;;;;;;;;;;;;;;;;;;;;;6571:4;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6571:15:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6571:15:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6571:15:4;;;;;;;;;6557:29;;:10;:29;;;:79;;;;6590:46;6607:16;6615:7;6607;:16::i;:::-;6625:10;6590:16;:46::i;:::-;6557:79;6549:114;;;;;;;;;;;;;;;;;;;;;;6755:2;6729:15;:24;6745:7;6729:24;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;6843:7;6839:2;6812:39;;6821:16;6829:7;6821;:16::i;:::-;6812:39;;;;;;;;;;;;6211:650;;:::o;14330:96::-;14374:7;14401:10;:17;;;;14394:24;;14330:96;:::o;8174:220::-;8265:39;8284:10;8296:7;8265:18;:39::i;:::-;8257:84;;;;;;;;;;;;;;;;;;;;;;8354:32;8368:4;8374:2;8378:7;8354:13;:32::i;:::-;8174:220;;;:::o;15167:129:6:-;15248:40;15259:5;15266:7;15285:1;15275:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15275:12:6;;;;15248:10;:40::i;:::-;15167:129;;:::o;13957:215:4:-;14037:7;14073:16;14083:5;14073:9;:16::i;:::-;14065:5;:24;14057:63;;;;;;;;;;;;;;;;;;;;;;14138:12;:19;14151:5;14138:19;;;;;;;;;;;;;;;14158:5;14138:26;;;;;;;;;;;;;;;;14131:33;;13957:215;;;;:::o;2587:302::-;1119:6;;;;;;;;;;;1105:20;;:10;:20;;;1097:61;;;;;;;;;;;;;;;;;;;;;;2675:7;;;;;;;;;;;2665:17;;:6;:17;;;;2657:69;;;;;;;;;;;;;;;;;;;;;;2745:6;2737:7;;:14;;;;;;;;;;;;;;;;;;2766:7;;;;;;;;;;;2762:120;;;2794:18;2801:10;2794:18;;;;;;;;;;;;;;;2762:120;;;2850:20;2859:10;2850:20;;;;;;;;;;;;;;;2762:120;2587:302;:::o;15304:181:6:-;;;;:::o;23459:176:4:-;23528:4;1119:6;;;;;;;;;;;1105:20;;:10;:20;;;1097:61;;;;;;;;;;;;;;;;;;;;;;23550:24;23562:2;23566:7;23550:11;:24::i;:::-;23585:20;23597:7;23585:11;:20::i;:::-;23623:4;23616:11;;23459:176;;;;:::o;8402:134::-;8489:39;8506:4;8512:2;8516:7;8489:39;;;;;;;;;;;;:16;:39::i;:::-;8402:134;;;:::o;14771:186::-;14829:7;14865:13;:11;:13::i;:::-;14857:5;:21;14849:65;;;;;;;;;;;;;;;;;;;;;;14932:10;14943:5;14932:17;;;;;;;;;;;;;;;;14925:24;;14771:186;;;:::o;5969:166::-;6024:7;6106:11;:20;6118:7;6106:20;;;;;;;;;;;;;;;;;;;;;6099:28;;5969:166;;;:::o;5671:290::-;5726:7;5918:34;:17;:24;5936:5;5918:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5911:42;;5671:290;;;:::o;1188:80::-;1228:7;1254:6;;;;;;;;;;;1247:13;;1188:80;:::o;21510:87::-;21550:13;21582:7;21575:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21510:87;:::o;7435:255::-;7521:10;7515:16;;:2;:16;;;;7507:63;;;;;;;;;;;;;;;;;;;;;;7618:8;7581:18;:30;7600:10;7581:30;;;;;;;;;;;;;;;:34;7612:2;7581:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7669:2;7642:40;;7657:10;7642:40;;;7673:8;7642:40;;;;;;;;;;;;;;;7435:255;;:::o;8544:241::-;8651:31;8664:4;8670:2;8674:7;8651:12;:31::i;:::-;8701:48;8724:4;8730:2;8734:7;8743:5;8701:22;:48::i;:::-;8693:84;;;;;;;;;;;;;;;;;;;;;;8544:241;;;;:::o;21605:99::-;21651:13;21683;21676:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21605:99;:::o;8019:147::-;8099:4;8123:18;:25;8142:5;8123:25;;;;;;;;;;;;;;;:35;8149:8;8123:35;;;;;;;;;;;;;;;;;;;;;;;;;8116:42;;8019:147;;;;:::o;1851:587:7:-;2529:5:4;2520:14;;:7;;;;;;;;;;;:14;;;2512:45;;;;;;;;;;;;;;;;;;;;;;2003:10:7;2050:5;:7;;;:9;;;2061:5;:9;;;:11;;;2074:5;:7;;;:9;;;2085:5;:9;;;:11;;;2140:5;:7;;;:9;;;2150:5;:9;;;:11;;;2163:5;:7;;;:9;;;2174:5;:7;;;:9;;;2186:5;2033:159;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2033:159:7;;;2023:170;;;;;;2003:191;;2251:1;2213:40;;:18;:23;2232:3;2213:23;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;2205:71;;;;;;;;;;;;;;;;;;;;;;2295:16;;;;;;;;;;;:25;;;2321:5;2328;2295:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2295:39:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2295:39:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2295:39:7;;;;;;;;;2287:67;;;;;;;;;;;;;;;;;;;;;;2365:31;2379:2;2383:7;2392:3;2365:13;:31::i;:::-;2407:23;2418:2;2422:7;2407:10;:23::i;:::-;;2568:1:4;1851:587:7;;;;:::o;1276:347:4:-;1119:6;;;;;;;;;;;1105:20;;:10;:20;;;1097:61;;;;;;;;;;;;;;;;;;;;;;1518:1;1499:21;;:8;:21;;;;1491:56;;;;;;;;;;;;;;;;;;;;;;1565:8;1558:6;;:15;;;;;;;;;;;;;;;;;;1589:24;1606:6;;;;;;;;;;;1589:24;;;;;;;;;;;;;;;1276:347;:::o;21712:184::-;21773:13;21807:16;21815:7;21807;:16::i;:::-;21799:52;;;;;;;;;;;;;;;;;;;;;;21869:10;:19;21880:7;21869:19;;;;;;;;;;;21862:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21712:184;;;:::o;9510:249::-;9595:4;9612:13;9628:16;9636:7;9628;:16::i;:::-;9612:32;;9674:5;9663:16;;:7;:16;;;:51;;;;9707:7;9683:31;;:20;9695:7;9683:11;:20::i;:::-;:31;;;9663:51;:87;;;;9718:32;9735:5;9742:7;9718:16;:32::i;:::-;9663:87;9655:96;;;9510:249;;;;:::o;15341:245::-;15427:38;15447:4;15453:2;15457:7;15427:19;:38::i;:::-;15478:47;15511:4;15517:7;15478:32;:47::i;:::-;15538:40;15566:2;15570:7;15538:27;:40::i;:::-;15341:245;;;:::o;15849:202::-;15913:24;15925:2;15929:7;15913:11;:24::i;:::-;15950:40;15978:2;15982:7;15950:27;:40::i;:::-;16003;16035:7;16003:31;:40::i;:::-;15849:202;;:::o;22382:206::-;22448:16;22456:7;22448;:16::i;:::-;22440:63;;;;;;;;;;;;;;;;;;;;;;22537:43;22547:13;22537:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22562:17;22571:7;22562:8;:17::i;:::-;22537:9;:43::i;:::-;22515:10;:19;22526:7;22515:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;22382:206;:::o;1065:112:0:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11923:356:4:-;12045:4;12072:15;:2;:13;;;:15::i;:::-;12067:60;;12111:4;12104:11;;;;12067:60;12139:13;12171:2;12155:36;;;12192:10;12204:4;12210:7;12219:5;12155:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12155:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12155:70:4;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;12155:70:4;;;;;;;;;12139:86;;4601:10;12254:16;;12244:26;;;:6;:26;;;;12236:35;;;11923:356;;;;;;;:::o;1333:286:7:-;1431:19;;:::i;:::-;1453:38;;;;;;;;1473:7;1453:38;;;;1487:2;1453:38;;;;;1431:60;;1528:3;1502:18;:23;1521:3;1502:23;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:9;1557:3;1542:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1542:19:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:3;1577:34;;;1598:7;1594:2;1577:34;;;;;;;;;;;;1333:286;;;;:::o;8986:155:4:-;9043:4;9060:13;9076:11;:20;9088:7;9076:20;;;;;;;;;;;;;;;;;;;;;9060:36;;9131:1;9114:19;;:5;:19;;;;9107:26;;;8986:155;;;:::o;10634:750::-;10808:11;:20;10820:7;10808:20;;;;;;;;;;;;;;;;;;;;;10801:27;;:4;:27;;;10793:79;;;;;;;;;;;;;;;;;;;;;;10976:1;10962:16;;:2;:16;;;;10954:51;;;;;;;;;;;;;;;;;;;;;;11069:23;11084:7;11069:14;:23::i;:::-;11181:33;:17;:21;11199:2;11181:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11225:35;:17;:23;11243:4;11225:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11292:2;11271:11;:20;11283:7;11271:20;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;11368:7;11364:2;11349:27;;11358:4;11349:27;;;;;;;;;;;;10634:750;;;:::o;17865:1148::-;18131:22;18156:32;18186:1;18156:12;:18;18169:4;18156:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18131:57;;18199:18;18220:17;:26;18238:7;18220:26;;;;;;;;;;;;18199:47;;18367:14;18353:10;:28;18349:328;;18398:19;18420:12;:18;18433:4;18420:18;;;;;;;;;;;;;;;18439:14;18420:34;;;;;;;;;;;;;;;;18398:56;;18504:11;18471:12;:18;18484:4;18471:18;;;;;;;;;;;;;;;18490:10;18471:30;;;;;;;;;;;;;;;:44;;;;18621:10;18588:17;:30;18606:11;18588:30;;;;;;;;;;;:43;;;;18349:328;;18766:12;:18;18779:4;18766:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17865:1148;;;;:::o;16689:186::-;16803:12;:16;16816:2;16803:16;;;;;;;;;;;;;;;:23;;;;16774:17;:26;16792:7;16774:26;;;;;;;;;;;:52;;;;16837:12;:16;16850:2;16837:16;;;;;;;;;;;;;;;16859:7;16837:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16837:30:4;;;;;;;;;;;;;;;;;;;;;;16689:186;;:::o;9920:511::-;10080:16;10088:7;10080;:16::i;:::-;10078:19;:39;;;;;10115:1;10101:16;;:2;:16;;;;10078:39;10070:91;;;;;;;;;;;;;;;;;;;;;;10277:2;10255:11;:20;10267:7;10255:20;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;10290:33;:17;:21;10308:2;10290:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10413:7;10409:2;10388:33;;10405:1;10388:33;;;;;;;;;;;;9920:511;;:::o;17076:164::-;17180:10;:17;;;;17153:15;:24;17169:7;17153:24;;;;;;;;;;;:44;;;;17208:10;17224:7;17208:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17208:24:4;;;;;;;;;;;;;;;;;;;;;;17076:164;:::o;44323:482:6:-;44373:27;44423:1;44417:2;:7;44413:50;;;44441:10;;;;;;;;;;;;;;;;;;;;;44413:50;44473:6;44482:2;44473:11;;44495:8;44514:69;44526:1;44521;:6;44514:69;;44544:5;;;;;;;44569:2;44564:7;;;;;;;;;44514:69;;;44593:17;44623:3;44613:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;44613:14:6;;;;44593:34;;44638:6;44653:1;44647:3;:7;44638:16;;44665:103;44678:1;44672:2;:7;44665:103;;44729:2;44724;:7;;;;;;44719:2;:12;44708:25;;44696:4;44701:3;;;;;;;44696:9;;;;;;;;;;;:37;;;;;;;;;;;44754:2;44748:8;;;;;;;;;44665:103;;;44792:4;44778:19;;;;;;44323:482;;;;:::o;40666:168::-;40744:33;40797:29;40807:2;40811;40797:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;40790:36;;40666:168;;;;:::o;686:610:3:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;12363:175:4:-;12463:1;12427:38;;:15;:24;12443:7;12427:24;;;;;;;;;;;;;;;;;;;;;:38;;;12423:108;;12517:1;12482:15;:24;12498:7;12482:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12423:108;12363:175;:::o;1183:178:0:-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1367:108::-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;41248:1046:6:-;41380:33;41426:16;41451:2;41426:28;;41465:16;41490:2;41465:28;;41504:16;41529:2;41504:28;;41543:16;41568:2;41543:28;;41582:16;41607:2;41582:28;;41621:19;41706:3;:10;41693:3;:10;41680:3;:10;41667:3;:10;41654:3;:10;:23;:36;:49;:62;41643:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;41643:74:6;;;;41621:96;;41728:19;41756:5;41728:34;;41773:6;41782:1;41773:10;;41794:6;41803:1;41794:10;;41824:1;41820:5;;41815:80;41831:3;:10;41827:1;:14;41815:80;;;41877:3;41881:1;41877:6;;;;;;;;;;;;;;;;41863;41870:3;;;;;;41863:11;;;;;;;;;;;:20;;;;;;;;;;;41843:3;;;;;;;41815:80;;;41914:1;41910:5;;41905:80;41921:3;:10;41917:1;:14;41905:80;;;41967:3;41971:1;41967:6;;;;;;;;;;;;;;;;41953;41960:3;;;;;;41953:11;;;;;;;;;;;:20;;;;;;;;;;;41933:3;;;;;;;41905:80;;;42004:1;42000:5;;41995:80;42011:3;:10;42007:1;:14;41995:80;;;42057:3;42061:1;42057:6;;;;;;;;;;;;;;;;42043;42050:3;;;;;;42043:11;;;;;;;;;;;:20;;;;;;;;;;;42023:3;;;;;;;41995:80;;;42094:1;42090:5;;42085:80;42101:3;:10;42097:1;:14;42085:80;;;42147:3;42151:1;42147:6;;;;;;;;;;;;;;;;42133;42140:3;;;;;;42133:11;;;;;;;;;;;:20;;;;;;;;;;;42113:3;;;;;;;42085:80;;;42184:1;42180:5;;42175:80;42191:3;:10;42187:1;:14;42175:80;;;42237:3;42241:1;42237:6;;;;;;;;;;;;;;;;42223;42230:3;;;;;;42223:11;;;;;;;;;;;:20;;;;;;;;;;;42203:3;;;;;;;42175:80;;;42279:6;42265:21;;;;;;;;;;;41248:1046;;;;;;;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;336:2105:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:134;;226:6;220:13;211:22;;238:33;265:5;238:33;;;205:71;;;;;302:608;;413:3;406:4;398:6;394:17;390:27;380:2;;431:1;428;421:12;380:2;455:4;474:74;489:58;540:6;489:58;;;474:74;;;465:83;;565:5;624:6;671:3;663:4;655:6;651:17;646:3;642:27;639:36;636:2;;;688:1;685;678:12;636:2;713:1;698:206;723:6;720:1;717:13;698:206;;;781:3;803:37;836:3;824:10;803:37;;;798:3;791:50;864:4;859:3;855:14;848:21;;892:4;887:3;883:14;876:21;;755:149;745:1;742;738:9;733:14;;698:206;;;702:14;373:537;;;;;;;;937:616;;1052:3;1045:4;1037:6;1033:17;1029:27;1019:2;;1070:1;1067;1060:12;1019:2;1094:4;1113:78;1128:62;1183:6;1128:62;;;1113:78;;;1104:87;;1208:5;1267:6;1314:3;1306:4;1298:6;1294:17;1289:3;1285:27;1282:36;1279:2;;;1331:1;1328;1321:12;1279:2;1356:1;1341:206;1366:6;1363:1;1360:13;1341:206;;;1424:3;1446:37;1479:3;1467:10;1446:37;;;1441:3;1434:50;1507:4;1502:3;1498:14;1491:21;;1535:4;1530:3;1526:14;1519:21;;1398:149;1388:1;1385;1381:9;1376:14;;1341:206;;;1345:14;1012:541;;;;;;;;1561:124;;1638:6;1625:20;1616:29;;1650:30;1674:5;1650:30;;;1610:75;;;;;1692:128;;1773:6;1767:13;1758:22;;1785:30;1809:5;1785:30;;;1752:68;;;;;1827:130;;1907:6;1894:20;1885:29;;1919:33;1946:5;1919:33;;;1879:78;;;;;1964:128;;2043:6;2030:20;2021:29;;2055:32;2081:5;2055:32;;;2015:77;;;;;2099:132;;2182:6;2176:13;2167:22;;2194:32;2220:5;2194:32;;;2161:70;;;;;2239:440;;2340:3;2333:4;2325:6;2321:17;2317:27;2307:2;;2358:1;2355;2348:12;2307:2;2395:6;2382:20;2417:64;2432:48;2473:6;2432:48;;;2417:64;;;2408:73;;2501:6;2494:5;2487:21;2537:4;2529:6;2525:17;2570:4;2563:5;2559:16;2605:3;2596:6;2591:3;2587:16;2584:25;2581:2;;;2622:1;2619;2612:12;2581:2;2632:41;2666:6;2661:3;2656;2632:41;;;2300:379;;;;;;;;2688:442;;2790:3;2783:4;2775:6;2771:17;2767:27;2757:2;;2808:1;2805;2798:12;2757:2;2845:6;2832:20;2867:65;2882:49;2924:6;2882:49;;;2867:65;;;2858:74;;2952:6;2945:5;2938:21;2988:4;2980:6;2976:17;3021:4;3014:5;3010:16;3056:3;3047:6;3042:3;3038:16;3035:25;3032:2;;;3073:1;3070;3063:12;3032:2;3083:41;3117:6;3112:3;3107;3083:41;;;2750:380;;;;;;;;3167:457;;3277:4;3265:9;3260:3;3256:19;3252:30;3249:2;;;3295:1;3292;3285:12;3249:2;3313:20;3328:4;3313:20;;;3304:29;;3380:1;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3343:130;3520:2;3553:49;3598:3;3589:6;3578:9;3574:22;3553:49;;;3546:4;3539:5;3535:16;3528:75;3483:131;3243:381;;;;;3660:495;;3770:4;3758:9;3753:3;3749:19;3745:30;3742:2;;;3788:1;3785;3778:12;3742:2;3806:20;3821:4;3806:20;;;3797:29;;3873:1;3905:68;3969:3;3960:6;3949:9;3945:22;3905:68;;;3898:4;3891:5;3887:16;3880:94;3836:149;4032:2;4065:68;4129:3;4120:6;4109:9;4105:22;4065:68;;;4058:4;4051:5;4047:16;4040:94;3995:150;3736:419;;;;;4190:1490;;4303:6;4291:9;4286:3;4282:19;4278:32;4275:2;;;4323:1;4320;4313:12;4275:2;4341:22;4356:6;4341:22;;;4332:31;;4410:1;4442:70;4508:3;4499:6;4488:9;4484:22;4442:70;;;4435:4;4428:5;4424:16;4417:96;4373:151;4573:2;4606:70;4672:3;4663:6;4652:9;4648:22;4606:70;;;4599:4;4592:5;4588:16;4581:96;4534:154;4735:3;4769:70;4835:3;4826:6;4815:9;4811:22;4769:70;;;4762:4;4755:5;4751:16;4744:96;4698:153;4900:3;4934:70;5000:3;4991:6;4980:9;4976:22;4934:70;;;4927:4;4920:5;4916:16;4909:96;4861:155;5063:3;5097:70;5163:3;5154:6;5143:9;5139:22;5097:70;;;5090:4;5083:5;5079:16;5072:96;5026:153;5228:3;5262:70;5328:3;5319:6;5308:9;5304:22;5262:70;;;5255:4;5248:5;5244:16;5237:96;5189:155;5391:3;5425:70;5491:3;5482:6;5471:9;5467:22;5425:70;;;5418:4;5411:5;5407:16;5400:96;5354:153;5554:3;5588:70;5654:3;5645:6;5634:9;5630:22;5588:70;;;5581:4;5574:5;5570:16;5563:96;5517:153;4269:1411;;;;;5687:130;;5767:6;5754:20;5745:29;;5779:33;5806:5;5779:33;;;5739:78;;;;;5824:241;;5928:2;5916:9;5907:7;5903:23;5899:32;5896:2;;;5944:1;5941;5934:12;5896:2;5979:1;5996:53;6041:7;6032:6;6021:9;6017:22;5996:53;;;5986:63;;5958:97;5890:175;;;;;6072:263;;6187:2;6175:9;6166:7;6162:23;6158:32;6155:2;;;6203:1;6200;6193:12;6155:2;6238:1;6255:64;6311:7;6302:6;6291:9;6287:22;6255:64;;;6245:74;;6217:108;6149:186;;;;;6342:366;;;6463:2;6451:9;6442:7;6438:23;6434:32;6431:2;;;6479:1;6476;6469:12;6431:2;6514:1;6531:53;6576:7;6567:6;6556:9;6552:22;6531:53;;;6521:63;;6493:97;6621:2;6639:53;6684:7;6675:6;6664:9;6660:22;6639:53;;;6629:63;;6600:98;6425:283;;;;;;6715:491;;;;6853:2;6841:9;6832:7;6828:23;6824:32;6821:2;;;6869:1;6866;6859:12;6821:2;6904:1;6921:53;6966:7;6957:6;6946:9;6942:22;6921:53;;;6911:63;;6883:97;7011:2;7029:53;7074:7;7065:6;7054:9;7050:22;7029:53;;;7019:63;;6990:98;7119:2;7137:53;7182:7;7173:6;7162:9;7158:22;7137:53;;;7127:63;;7098:98;6815:391;;;;;;7213:721;;;;;7377:3;7365:9;7356:7;7352:23;7348:33;7345:2;;;7394:1;7391;7384:12;7345:2;7429:1;7446:53;7491:7;7482:6;7471:9;7467:22;7446:53;;;7436:63;;7408:97;7536:2;7554:53;7599:7;7590:6;7579:9;7575:22;7554:53;;;7544:63;;7515:98;7644:2;7662:53;7707:7;7698:6;7687:9;7683:22;7662:53;;;7652:63;;7623:98;7780:2;7769:9;7765:18;7752:32;7804:18;7796:6;7793:30;7790:2;;;7836:1;7833;7826:12;7790:2;7856:62;7910:7;7901:6;7890:9;7886:22;7856:62;;;7846:72;;7731:193;7339:595;;;;;;;;7941:360;;;8059:2;8047:9;8038:7;8034:23;8030:32;8027:2;;;8075:1;8072;8065:12;8027:2;8110:1;8127:53;8172:7;8163:6;8152:9;8148:22;8127:53;;;8117:63;;8089:97;8217:2;8235:50;8277:7;8268:6;8257:9;8253:22;8235:50;;;8225:60;;8196:95;8021:280;;;;;;8308:366;;;8429:2;8417:9;8408:7;8404:23;8400:32;8397:2;;;8445:1;8442;8435:12;8397:2;8480:1;8497:53;8542:7;8533:6;8522:9;8518:22;8497:53;;;8487:63;;8459:97;8587:2;8605:53;8650:7;8641:6;8630:9;8626:22;8605:53;;;8595:63;;8566:98;8391:283;;;;;;8681:712;;;;;8883:3;8871:9;8862:7;8858:23;8854:33;8851:2;;;8900:1;8897;8890:12;8851:2;8935:1;8952:53;8997:7;8988:6;8977:9;8973:22;8952:53;;;8942:63;;8914:97;9042:2;9060:53;9105:7;9096:6;9085:9;9081:22;9060:53;;;9050:63;;9021:98;9150:2;9168:77;9237:7;9228:6;9217:9;9213:22;9168:77;;;9158:87;;9129:122;9282:3;9301:76;9369:7;9360:6;9349:9;9345:22;9301:76;;;9291:86;;9261:122;8845:548;;;;;;;;9400:235;;9501:2;9489:9;9480:7;9476:23;9472:32;9469:2;;;9517:1;9514;9507:12;9469:2;9552:1;9569:50;9611:7;9602:6;9591:9;9587:22;9569:50;;;9559:60;;9531:94;9463:172;;;;;9642:257;;9754:2;9742:9;9733:7;9729:23;9725:32;9722:2;;;9770:1;9767;9760:12;9722:2;9805:1;9822:61;9875:7;9866:6;9855:9;9851:22;9822:61;;;9812:71;;9784:105;9716:183;;;;;9906:472;;;10037:2;10025:9;10016:7;10012:23;10008:32;10005:2;;;10053:1;10050;10043:12;10005:2;10088:1;10105:53;10150:7;10141:6;10130:9;10126:22;10105:53;;;10095:63;;10067:97;10223:2;10212:9;10208:18;10195:32;10247:18;10239:6;10236:30;10233:2;;;10279:1;10276;10269:12;10233:2;10299:63;10354:7;10345:6;10334:9;10330:22;10299:63;;;10289:73;;10174:194;9999:379;;;;;;10385:701;;;;10542:2;10530:9;10521:7;10517:23;10513:32;10510:2;;;10558:1;10555;10548:12;10510:2;10593:1;10610:53;10655:7;10646:6;10635:9;10631:22;10610:53;;;10600:63;;10572:97;10728:2;10717:9;10713:18;10700:32;10752:18;10744:6;10741:30;10738:2;;;10784:1;10781;10774:12;10738:2;10804:63;10859:7;10850:6;10839:9;10835:22;10804:63;;;10794:73;;10679:194;10932:2;10921:9;10917:18;10904:32;10956:18;10948:6;10945:30;10942:2;;;10988:1;10985;10978:12;10942:2;11008:62;11062:7;11053:6;11042:9;11038:22;11008:62;;;10998:72;;10883:193;10504:582;;;;;;11093:239;;11196:2;11184:9;11175:7;11171:23;11167:32;11164:2;;;11212:1;11209;11202:12;11164:2;11247:1;11264:52;11308:7;11299:6;11288:9;11284:22;11264:52;;;11254:62;;11226:96;11158:174;;;;;11339:261;;11453:2;11441:9;11432:7;11428:23;11424:32;11421:2;;;11469:1;11466;11459:12;11421:2;11504:1;11521:63;11576:7;11567:6;11556:9;11552:22;11521:63;;;11511:73;;11483:107;11415:185;;;;;11607:241;;11711:2;11699:9;11690:7;11686:23;11682:32;11679:2;;;11727:1;11724;11717:12;11679:2;11762:1;11779:53;11824:7;11815:6;11804:9;11800:22;11779:53;;;11769:63;;11741:97;11673:175;;;;;11856:173;;11943:46;11985:3;11977:6;11943:46;;;12018:4;12013:3;12009:14;11995:28;;11936:93;;;;;12038:189;;12133:54;12183:3;12175:6;12133:54;;;12216:4;12211:3;12207:14;12193:28;;12126:101;;;;;12235:142;12326:45;12365:5;12326:45;;;12321:3;12314:58;12308:69;;;12384:113;12467:24;12485:5;12467:24;;;12462:3;12455:37;12449:48;;;12537:660;12670:52;12716:5;12670:52;;;12735:84;12812:6;12807:3;12735:84;;;12728:91;;12840:54;12888:5;12840:54;;;12914:7;12942:1;12927:258;12952:6;12949:1;12946:13;12927:258;;;13019:6;13013:13;13040:63;13099:3;13084:13;13040:63;;;13033:70;;13120:58;13171:6;13120:58;;;13110:68;;12984:201;12974:1;12971;12967:9;12962:14;;12927:258;;;12931:14;12649:548;;;;;;13238:704;13389:52;13435:5;13389:52;;;13454:102;13549:6;13544:3;13454:102;;;13447:109;;13577:54;13625:5;13577:54;;;13651:7;13679:1;13664:266;13689:6;13686:1;13683:13;13664:266;;;13756:6;13750:13;13777:71;13844:3;13829:13;13777:71;;;13770:78;;13865:58;13916:6;13865:58;;;13855:68;;13721:209;13711:1;13708;13704:9;13699:14;;13664:266;;;13668:14;13368:574;;;;;;13983:624;14102:48;14144:5;14102:48;;;14163:74;14230:6;14225:3;14163:74;;;14156:81;;14258:50;14302:5;14258:50;;;14328:7;14356:1;14341:254;14366:6;14363:1;14360:13;14341:254;;;14433:6;14427:13;14454:63;14513:3;14498:13;14454:63;;;14447:70;;14534:54;14581:6;14534:54;;;14524:64;;14398:197;14388:1;14385;14381:9;14376:14;;14341:254;;;14345:14;14081:526;;;;;;14648:688;14795:48;14837:5;14795:48;;;14856:102;14951:6;14946:3;14856:102;;;14849:109;;14979:50;15023:5;14979:50;;;15049:7;15077:1;15062:262;15087:6;15084:1;15081:13;15062:262;;;15154:6;15148:13;15175:71;15242:3;15227:13;15175:71;;;15168:78;;15263:54;15310:6;15263:54;;;15253:64;;15119:205;15109:1;15106;15102:9;15097:14;;15062:262;;;15066:14;14774:562;;;;;;15344:104;15421:21;15436:5;15421:21;;;15416:3;15409:34;15403:45;;;15455:343;;15565:38;15597:5;15565:38;;;15615:70;15678:6;15673:3;15615:70;;;15608:77;;15690:52;15735:6;15730:3;15723:4;15716:5;15712:16;15690:52;;;15763:29;15785:6;15763:29;;;15758:3;15754:39;15747:46;;15545:253;;;;;;15805:347;;15917:39;15950:5;15917:39;;;15968:71;16032:6;16027:3;15968:71;;;15961:78;;16044:52;16089:6;16084:3;16077:4;16070:5;16066:16;16044:52;;;16117:29;16139:6;16117:29;;;16112:3;16108:39;16101:46;;15897:255;;;;;;16160:326;;16320:67;16384:2;16379:3;16320:67;;;16313:74;;16420:28;16416:1;16411:3;16407:11;16400:49;16477:2;16472:3;16468:12;16461:19;;16306:180;;;;16495:320;;16655:67;16719:2;16714:3;16655:67;;;16648:74;;16755:22;16751:1;16746:3;16742:11;16735:43;16806:2;16801:3;16797:12;16790:19;;16641:174;;;;16824:371;;16984:67;17048:2;17043:3;16984:67;;;16977:74;;17084:34;17080:1;17075:3;17071:11;17064:55;17153:4;17148:2;17143:3;17139:12;17132:26;17186:2;17181:3;17177:12;17170:19;;16970:225;;;;17204:323;;17364:67;17428:2;17423:3;17364:67;;;17357:74;;17464:25;17460:1;17455:3;17451:11;17444:46;17518:2;17513:3;17509:12;17502:19;;17350:177;;;;17536:323;;17696:67;17760:2;17755:3;17696:67;;;17689:74;;17796:25;17792:1;17787:3;17783:11;17776:46;17850:2;17845:3;17841:12;17834:19;;17682:177;;;;17868:322;;18028:67;18092:2;18087:3;18028:67;;;18021:74;;18128:24;18124:1;18119:3;18115:11;18108:45;18181:2;18176:3;18172:12;18165:19;;18014:176;;;;18199:323;;18359:67;18423:2;18418:3;18359:67;;;18352:74;;18459:25;18455:1;18450:3;18446:11;18439:46;18513:2;18508:3;18504:12;18497:19;;18345:177;;;;18531:376;;18691:67;18755:2;18750:3;18691:67;;;18684:74;;18791:34;18787:1;18782:3;18778:11;18771:55;18860:9;18855:2;18850:3;18846:12;18839:31;18898:2;18893:3;18889:12;18882:19;;18677:230;;;;18916:315;;19076:67;19140:2;19135:3;19076:67;;;19069:74;;19176:17;19172:1;19167:3;19163:11;19156:38;19222:2;19217:3;19213:12;19206:19;;19062:169;;;;19240:318;;19400:67;19464:2;19459:3;19400:67;;;19393:74;;19500:20;19496:1;19491:3;19487:11;19480:41;19549:2;19544:3;19540:12;19533:19;;19386:172;;;;19567:375;;19727:67;19791:2;19786:3;19727:67;;;19720:74;;19827:34;19823:1;19818:3;19814:11;19807:55;19896:8;19891:2;19886:3;19882:12;19875:30;19933:2;19928:3;19924:12;19917:19;;19713:229;;;;19951:331;;20111:67;20175:2;20170:3;20111:67;;;20104:74;;20211:33;20207:1;20202:3;20198:11;20191:54;20273:2;20268:3;20264:12;20257:19;;20097:185;;;;20291:332;;20451:67;20515:2;20510:3;20451:67;;;20444:74;;20551:34;20547:1;20542:3;20538:11;20531:55;20614:2;20609:3;20605:12;20598:19;;20437:186;;;;20632:374;;20792:67;20856:2;20851:3;20792:67;;;20785:74;;20892:34;20888:1;20883:3;20879:11;20872:55;20961:7;20956:2;20951:3;20947:12;20940:29;20997:2;20992:3;20988:12;20981:19;;20778:228;;;;21015:328;;21175:67;21239:2;21234:3;21175:67;;;21168:74;;21275:30;21271:1;21266:3;21262:11;21255:51;21334:2;21329:3;21325:12;21318:19;;21161:182;;;;21352:318;;21512:67;21576:2;21571:3;21512:67;;;21505:74;;21612:20;21608:1;21603:3;21599:11;21592:41;21661:2;21656:3;21652:12;21645:19;;21498:172;;;;21679:322;;21839:67;21903:2;21898:3;21839:67;;;21832:74;;21939:24;21935:1;21930:3;21926:11;21919:45;21992:2;21987:3;21983:12;21976:19;;21825:176;;;;22010:323;;22170:67;22234:2;22229:3;22170:67;;;22163:74;;22270:25;22266:1;22261:3;22257:11;22250:46;22324:2;22319:3;22315:12;22308:19;;22156:177;;;;22342:371;;22502:67;22566:2;22561:3;22502:67;;;22495:74;;22602:34;22598:1;22593:3;22589:11;22582:55;22671:4;22666:2;22661:3;22657:12;22650:26;22704:2;22699:3;22695:12;22688:19;;22488:225;;;;22776:456;22905:4;22900:3;22896:14;22985:4;22978:5;22974:16;22968:23;22997:63;23054:4;23049:3;23045:14;23031:12;22997:63;;;22925:141;23136:4;23129:5;23125:16;23119:23;23148:63;23205:4;23200:3;23196:14;23182:12;23148:63;;;23076:141;22878:354;;;;23294:540;23423:4;23418:3;23414:14;23503:4;23496:5;23492:16;23486:23;23515:105;23614:4;23609:3;23605:14;23591:12;23515:105;;;23443:183;23696:4;23689:5;23685:16;23679:23;23708:105;23807:4;23802:3;23798:14;23784:12;23708:105;;;23636:183;23396:438;;;;23894:1760;24035:6;24030:3;24026:16;24117:4;24110:5;24106:16;24100:23;24129:109;24232:4;24227:3;24223:14;24209:12;24129:109;;;24057:187;24316:4;24309:5;24305:16;24299:23;24328:109;24431:4;24426:3;24422:14;24408:12;24328:109;;;24254:189;24513:4;24506:5;24502:16;24496:23;24525:109;24628:4;24623:3;24619:14;24605:12;24525:109;;;24453:187;24712:4;24705:5;24701:16;24695:23;24724:111;24827:6;24822:3;24818:16;24804:12;24724:111;;;24650:191;24911:4;24904:5;24900:16;24894:23;24923:111;25026:6;25021:3;25017:16;25003:12;24923:111;;;24851:189;25112:4;25105:5;25101:16;25095:23;25124:111;25227:6;25222:3;25218:16;25204:12;25124:111;;;25050:191;25311:4;25304:5;25300:16;25294:23;25323:111;25426:6;25421:3;25417:16;25403:12;25323:111;;;25251:189;25510:4;25503:5;25499:16;25493:23;25522:111;25625:6;25620:3;25616:16;25602:12;25522:111;;;25450:189;24008:1646;;;;25661:103;25734:24;25752:5;25734:24;;;25729:3;25722:37;25716:48;;;25771:113;25854:24;25872:5;25854:24;;;25849:3;25842:37;25836:48;;;25891:111;25972:24;25990:5;25972:24;;;25967:3;25960:37;25954:48;;;26009:152;26110:45;26130:24;26148:5;26130:24;;;26110:45;;;26105:3;26098:58;26092:69;;;26168:1532;;26599:75;26670:3;26661:6;26599:75;;;26696:2;26691:3;26687:12;26680:19;;26710:75;26781:3;26772:6;26710:75;;;26807:2;26802:3;26798:12;26791:19;;26821:117;26934:3;26925:6;26821:117;;;26960:2;26955:3;26951:12;26944:19;;26974:75;27045:3;27036:6;26974:75;;;27071:2;27066:3;27062:12;27055:19;;27085:75;27156:3;27147:6;27085:75;;;27182:2;27177:3;27173:12;27166:19;;27196:75;27267:3;27258:6;27196:75;;;27293:2;27288:3;27284:12;27277:19;;27307:75;27378:3;27369:6;27307:75;;;27404:2;27399:3;27395:12;27388:19;;27418:75;27489:3;27480:6;27418:75;;;27515:2;27510:3;27506:12;27499:19;;27529:121;27646:3;27637:6;27529:121;;;27672:2;27667:3;27663:12;27656:19;;27692:3;27685:10;;26587:1113;;;;;;;;;;;;;27707:213;;27825:2;27814:9;27810:18;27802:26;;27839:71;27907:1;27896:9;27892:17;27883:6;27839:71;;;27796:124;;;;;27927:229;;28053:2;28042:9;28038:18;28030:26;;28067:79;28143:1;28132:9;28128:17;28119:6;28067:79;;;28024:132;;;;;28163:647;;28391:3;28380:9;28376:19;28368:27;;28406:79;28482:1;28471:9;28467:17;28458:6;28406:79;;;28496:72;28564:2;28553:9;28549:18;28540:6;28496:72;;;28579;28647:2;28636:9;28632:18;28623:6;28579:72;;;28699:9;28693:4;28689:20;28684:2;28673:9;28669:18;28662:48;28724:76;28795:4;28786:6;28724:76;;;28716:84;;28362:448;;;;;;;;28817:201;;28929:2;28918:9;28914:18;28906:26;;28943:65;29005:1;28994:9;28990:17;28981:6;28943:65;;;28900:118;;;;;29025:301;;29163:2;29152:9;29148:18;29140:26;;29213:9;29207:4;29203:20;29199:1;29188:9;29184:17;29177:47;29238:78;29311:4;29302:6;29238:78;;;29230:86;;29134:192;;;;;29333:407;;29524:2;29513:9;29509:18;29501:26;;29574:9;29568:4;29564:20;29560:1;29549:9;29545:17;29538:47;29599:131;29725:4;29599:131;;;29591:139;;29495:245;;;;29747:407;;29938:2;29927:9;29923:18;29915:26;;29988:9;29982:4;29978:20;29974:1;29963:9;29959:17;29952:47;30013:131;30139:4;30013:131;;;30005:139;;29909:245;;;;30161:407;;30352:2;30341:9;30337:18;30329:26;;30402:9;30396:4;30392:20;30388:1;30377:9;30373:17;30366:47;30427:131;30553:4;30427:131;;;30419:139;;30323:245;;;;30575:407;;30766:2;30755:9;30751:18;30743:26;;30816:9;30810:4;30806:20;30802:1;30791:9;30787:17;30780:47;30841:131;30967:4;30841:131;;;30833:139;;30737:245;;;;30989:407;;31180:2;31169:9;31165:18;31157:26;;31230:9;31224:4;31220:20;31216:1;31205:9;31201:17;31194:47;31255:131;31381:4;31255:131;;;31247:139;;31151:245;;;;31403:407;;31594:2;31583:9;31579:18;31571:26;;31644:9;31638:4;31634:20;31630:1;31619:9;31615:17;31608:47;31669:131;31795:4;31669:131;;;31661:139;;31565:245;;;;31817:407;;32008:2;31997:9;31993:18;31985:26;;32058:9;32052:4;32048:20;32044:1;32033:9;32029:17;32022:47;32083:131;32209:4;32083:131;;;32075:139;;31979:245;;;;32231:407;;32422:2;32411:9;32407:18;32399:26;;32472:9;32466:4;32462:20;32458:1;32447:9;32443:17;32436:47;32497:131;32623:4;32497:131;;;32489:139;;32393:245;;;;32645:407;;32836:2;32825:9;32821:18;32813:26;;32886:9;32880:4;32876:20;32872:1;32861:9;32857:17;32850:47;32911:131;33037:4;32911:131;;;32903:139;;32807:245;;;;33059:407;;33250:2;33239:9;33235:18;33227:26;;33300:9;33294:4;33290:20;33286:1;33275:9;33271:17;33264:47;33325:131;33451:4;33325:131;;;33317:139;;33221:245;;;;33473:407;;33664:2;33653:9;33649:18;33641:26;;33714:9;33708:4;33704:20;33700:1;33689:9;33685:17;33678:47;33739:131;33865:4;33739:131;;;33731:139;;33635:245;;;;33887:407;;34078:2;34067:9;34063:18;34055:26;;34128:9;34122:4;34118:20;34114:1;34103:9;34099:17;34092:47;34153:131;34279:4;34153:131;;;34145:139;;34049:245;;;;34301:407;;34492:2;34481:9;34477:18;34469:26;;34542:9;34536:4;34532:20;34528:1;34517:9;34513:17;34506:47;34567:131;34693:4;34567:131;;;34559:139;;34463:245;;;;34715:407;;34906:2;34895:9;34891:18;34883:26;;34956:9;34950:4;34946:20;34942:1;34931:9;34927:17;34920:47;34981:131;35107:4;34981:131;;;34973:139;;34877:245;;;;35129:407;;35320:2;35309:9;35305:18;35297:26;;35370:9;35364:4;35360:20;35356:1;35345:9;35341:17;35334:47;35395:131;35521:4;35395:131;;;35387:139;;35291:245;;;;35543:407;;35734:2;35723:9;35719:18;35711:26;;35784:9;35778:4;35774:20;35770:1;35759:9;35755:17;35748:47;35809:131;35935:4;35809:131;;;35801:139;;35705:245;;;;35957:407;;36148:2;36137:9;36133:18;36125:26;;36198:9;36192:4;36188:20;36184:1;36173:9;36169:17;36162:47;36223:131;36349:4;36223:131;;;36215:139;;36119:245;;;;36371:407;;36562:2;36551:9;36547:18;36539:26;;36612:9;36606:4;36602:20;36598:1;36587:9;36583:17;36576:47;36637:131;36763:4;36637:131;;;36629:139;;36533:245;;;;36785:407;;36976:2;36965:9;36961:18;36953:26;;37026:9;37020:4;37016:20;37012:1;37001:9;36997:17;36990:47;37051:131;37177:4;37051:131;;;37043:139;;36947:245;;;;37199:514;;37439:3;37428:9;37424:19;37416:27;;37454:119;37570:1;37559:9;37555:17;37546:6;37454:119;;;37584;37698:3;37687:9;37683:19;37674:6;37584:119;;;37410:303;;;;;;37720:213;;37838:2;37827:9;37823:18;37815:26;;37852:71;37920:1;37909:9;37905:17;37896:6;37852:71;;;37809:124;;;;;37940:256;;38002:2;37996:9;37986:19;;38040:4;38032:6;38028:17;38139:6;38127:10;38124:22;38103:18;38091:10;38088:34;38085:62;38082:2;;;38160:1;38157;38150:12;38082:2;38180:10;38176:2;38169:22;37980:216;;;;;38203:240;;38356:18;38348:6;38345:30;38342:2;;;38388:1;38385;38378:12;38342:2;38423:4;38415:6;38411:17;38403:25;;38279:164;;;;38450:244;;38607:18;38599:6;38596:30;38593:2;;;38639:1;38636;38629:12;38593:2;38674:4;38666:6;38662:17;38654:25;;38530:164;;;;38701:321;;38844:18;38836:6;38833:30;38830:2;;;38876:1;38873;38866:12;38830:2;38943:4;38939:9;38932:4;38924:6;38920:17;38916:33;38908:41;;39007:4;39001;38997:15;38989:23;;38767:255;;;;39029:322;;39173:18;39165:6;39162:30;39159:2;;;39205:1;39202;39195:12;39159:2;39272:4;39268:9;39261:4;39253:6;39249:17;39245:33;39237:41;;39336:4;39330;39326:15;39318:23;;39096:255;;;;39358:93;;39438:3;39430:11;;39424:27;;;;39458:97;;39542:3;39534:11;;39528:27;;;;39562:104;;39652:4;39642:14;;39630:36;;;;39673:108;;39767:4;39757:14;;39745:36;;;;39788:121;;39881:5;39875:12;39865:22;;39846:63;;;;39916:122;;40010:5;40004:12;39994:22;;39975:63;;;;40045:102;;40137:4;40132:3;40128:14;40120:22;;40114:33;;;;40154:106;;40250:4;40245:3;40241:14;40233:22;;40227:33;;;;40268:130;;40389:3;40374:18;;40367:31;;;;;40407:140;;40538:3;40523:18;;40516:31;;;;;40556:158;;40705:3;40690:18;;40683:31;;;;;40723:162;;40837:6;40832:3;40825:19;40874:4;40869:3;40865:14;40850:29;;40818:67;;;;;40894:163;;41009:6;41004:3;40997:19;41046:4;41041:3;41037:14;41022:29;;40990:67;;;;;41065:91;;41127:24;41145:5;41127:24;;;41116:35;;41110:46;;;;41163:85;;41236:5;41229:13;41222:21;41211:32;;41205:43;;;;41255:72;;41317:5;41306:16;;41300:27;;;;41334:144;;41406:66;41399:5;41395:78;41384:89;;41378:100;;;;41485:121;;41558:42;41551:5;41547:54;41536:65;;41530:76;;;;41613:72;;41675:5;41664:16;;41658:27;;;;41692:129;;41779:37;41810:5;41779:37;;;41766:50;;41760:61;;;;41828:121;;41907:37;41938:5;41907:37;;;41894:50;;41888:61;;;;41956:108;;42035:24;42053:5;42035:24;;;42022:37;;42016:48;;;;42072:145;42153:6;42148:3;42143;42130:30;42209:1;42200:6;42195:3;42191:16;42184:27;42123:94;;;;42226:268;42291:1;42298:101;42312:6;42309:1;42306:13;42298:101;;;42388:1;42383:3;42379:11;42373:18;42369:1;42364:3;42360:11;42353:39;42334:2;42331:1;42327:10;42322:15;;42298:101;;;42414:6;42411:1;42408:13;42405:2;;;42479:1;42470:6;42465:3;42461:16;42454:27;42405:2;42275:219;;;;;42502:74;;42566:5;42555:16;;42549:27;;;;42583:97;;42671:2;42667:7;42662:2;42655:5;42651:14;42647:28;42637:38;;42631:49;;;;42688:117;42757:24;42775:5;42757:24;;;42750:5;42747:35;42737:2;;42796:1;42793;42786:12;42737:2;42731:74;;42812:111;42878:21;42893:5;42878:21;;;42871:5;42868:32;42858:2;;42914:1;42911;42904:12;42858:2;42852:71;;42930:117;42999:24;43017:5;42999:24;;;42992:5;42989:35;42979:2;;43038:1;43035;43028:12;42979:2;42973:74;;43054:115;43122:23;43139:5;43122:23;;;43115:5;43112:34;43102:2;;43160:1;43157;43150:12;43102:2;43096:73;;43176:117;43245:24;43263:5;43245:24;;;43238:5;43235:35;43225:2;;43284:1;43281;43274:12;43225:2;43219:74;",
  "source": "pragma solidity >=0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\r\nimport \"./ERC721Mintable.sol\";\r\nimport \"./verifier.sol\";\r\n\r\n\r\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\r\ncontract SolnSquareVerifier is CustomERC721Token {\r\n    // TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\r\n    Verifier verifierContract;\r\n\r\n    constructor(string memory name, string memory symbol, address verifierAddress) \r\n        CustomERC721Token(name, symbol) public{\r\n        verifierContract = Verifier(verifierAddress);\r\n    }\r\n\r\n    // TODO define a solutions struct that can hold an index & an address\r\n    struct solution {\r\n        uint256 tokenId;\r\n        address to;\r\n\r\n    }\r\n\r\n    // TODO define an array of the above struct\r\n    solution[] Solutions;\r\n\r\n    // TODO define a mapping to store unique solutions submitted\r\n    mapping(bytes4 => solution) submittedSolutions;\r\n\r\n    // TODO Create an event to emit when a solution is added\r\n    event AddedToSolutions(address indexed to, uint256 indexed tokenId, bytes4 indexed key);\r\n\r\n    // TODO Create a function to add the solutions to the array and emit the event\r\n    function _addSolutions(address to, uint256 tokenId, bytes4 key)\r\n        internal\r\n    {\r\n        solution memory sol = solution({tokenId : tokenId, to : to});\r\n        submittedSolutions[key] = sol;\r\n        Solutions.push(sol);\r\n        emit AddedToSolutions(to, tokenId, key);\r\n    }\r\n\r\n    // TODO Create a function to mint new NFT only after the solution has been verified\r\n    //  - make sure the solution is unique (has not been used before)\r\n    //  - make sure you handle metadata as well as tokenSupply\r\n    function mintRET(address to, uint256 tokenId, Verifier.Proof memory proof, uint[2] memory input)\r\n        public\r\n        whenNotPaused\r\n    {\r\n        bytes4 key = bytes4(keccak256(abi.encodePacked(proof.a.X, proof.a_p.X, proof.b.X, proof.b_p.X ,\r\n                                        proof.c.X,proof.c_p.X, proof.h.X, proof.k.X , input)));\r\n        require(submittedSolutions[key].to == address(0), \"Already used Proof\");\r\n        require(verifierContract.verifyTx(proof, input), \"Proof incorrect\");\r\n        _addSolutions(to, tokenId, key);\r\n        super.mint(to, tokenId);\r\n    }\r\n}\r\n\r\n\r\n/*interface verifier {\r\n    struct P_C {uint[2] c1; uint[2] c2;}\r\n    struct Proof {uint[2] a; uint[2] b; P_C c; uint[2] d; uint[2] e; uint[2] f; uint[2] g; uint[2] h;}\r\n    function verifyTx(Proof calldata proof, uint[2] calldata input) external view returns (bool r);\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "sourcePath": "C:\\Users\\mukes\\OneDrive\\Desktop\\Projects\\capstone\\Blockchain-Capstone\\eth-contracts\\contracts\\SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7972
      ]
    },
    "id": 7973,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7804,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "id": 7805,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:7"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7806,
        "nodeType": "ImportDirective",
        "scope": 7973,
        "sourceUnit": 1478,
        "src": "171:30:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7807,
        "nodeType": "ImportDirective",
        "scope": 7973,
        "sourceUnit": 10615,
        "src": "203:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7808,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1477,
              "src": "367:17:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1477",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7809,
            "nodeType": "InheritanceSpecifier",
            "src": "367:17:7"
          }
        ],
        "contractDependencies": [
          398,
          474,
          521,
          1025,
          1325,
          1436,
          1477,
          7802
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7972,
        "linearizedBaseContracts": [
          7972,
          1477,
          1436,
          7802,
          1325,
          1025,
          521,
          474,
          398
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7811,
            "name": "verifierContract",
            "nodeType": "VariableDeclaration",
            "scope": 7972,
            "src": "504:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$10614",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7810,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10614,
              "src": "504:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10614",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7830,
              "nodeType": "Block",
              "src": "665:63:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7824,
                      "name": "verifierContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7811,
                      "src": "676:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10614",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7826,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7817,
                          "src": "704:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7825,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10614,
                        "src": "695:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$10614_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "695:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$10614",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "676:44:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$10614",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7829,
                  "nodeType": "ExpressionStatement",
                  "src": "676:44:7"
                }
              ]
            },
            "documentation": null,
            "id": 7831,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7820,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7813,
                    "src": "645:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7821,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7815,
                    "src": "651:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7822,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7819,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1477,
                  "src": "627:17:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1477_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "627:31:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7813,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7831,
                  "src": "550:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7812,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7815,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7831,
                  "src": "570:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7814,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7817,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7831,
                  "src": "592:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "549:67:7"
            },
            "returnParameters": {
              "id": 7823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:0:7"
            },
            "scope": 7972,
            "src": "538:190:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.solution",
            "id": 7836,
            "members": [
              {
                "constant": false,
                "id": 7833,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7836,
                "src": "838:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7832,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "838:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7835,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7836,
                "src": "864:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7834,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "864:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "solution",
            "nodeType": "StructDefinition",
            "scope": 7972,
            "src": "811:73:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7839,
            "name": "Solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7972,
            "src": "941:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_solution_$7836_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7837,
                "name": "solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7836,
                "src": "941:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solution_$7836_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solution"
                }
              },
              "id": 7838,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "941:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_solution_$7836_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7843,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7972,
            "src": "1036:46:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_solution_$7836_storage_$",
              "typeString": "mapping(bytes4 => struct SolnSquareVerifier.solution)"
            },
            "typeName": {
              "id": 7842,
              "keyType": {
                "id": 7840,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "1044:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "1036:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_solution_$7836_storage_$",
                "typeString": "mapping(bytes4 => struct SolnSquareVerifier.solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7841,
                "name": "solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7836,
                "src": "1054:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_solution_$7836_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7851,
            "name": "AddedToSolutions",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7845,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7851,
                  "src": "1176:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1176:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7847,
                  "indexed": true,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7851,
                  "src": "1196:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7849,
                  "indexed": true,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7851,
                  "src": "1221:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7848,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1175:65:7"
            },
            "src": "1153:88:7"
          },
          {
            "body": {
              "id": 7885,
              "nodeType": "Block",
              "src": "1420:199:7",
              "statements": [
                {
                  "assignments": [
                    7861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7861,
                      "name": "sol",
                      "nodeType": "VariableDeclaration",
                      "scope": 7885,
                      "src": "1431:19:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solution_$7836_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7860,
                        "name": "solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7836,
                        "src": "1431:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_solution_$7836_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7866,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7863,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7855,
                        "src": "1473:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7864,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7853,
                        "src": "1487:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7862,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7836,
                      "src": "1453:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_solution_$7836_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.solution storage pointer)"
                      }
                    },
                    "id": 7865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenId",
                      "to"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1453:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solution_$7836_memory",
                      "typeString": "struct SolnSquareVerifier.solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1431:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7867,
                        "name": "submittedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7843,
                        "src": "1502:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_solution_$7836_storage_$",
                          "typeString": "mapping(bytes4 => struct SolnSquareVerifier.solution storage ref)"
                        }
                      },
                      "id": 7869,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7868,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7857,
                        "src": "1521:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1502:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solution_$7836_storage",
                        "typeString": "struct SolnSquareVerifier.solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7870,
                      "name": "sol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7861,
                      "src": "1528:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_solution_$7836_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.solution memory"
                      }
                    },
                    "src": "1502:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_solution_$7836_storage",
                      "typeString": "struct SolnSquareVerifier.solution storage ref"
                    }
                  },
                  "id": 7872,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:29:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7876,
                        "name": "sol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7861,
                        "src": "1557:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_solution_$7836_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_solution_$7836_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7873,
                        "name": "Solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7839,
                        "src": "1542:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_solution_$7836_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.solution storage ref[] storage ref"
                        }
                      },
                      "id": 7875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1542:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_solution_$7836_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1542:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7878,
                  "nodeType": "ExpressionStatement",
                  "src": "1542:19:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7880,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7853,
                        "src": "1594:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7881,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7855,
                        "src": "1598:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7882,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7857,
                        "src": "1607:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 7879,
                      "name": "AddedToSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7851,
                      "src": "1577:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,uint256,bytes4)"
                      }
                    },
                    "id": 7883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7884,
                  "nodeType": "EmitStatement",
                  "src": "1572:39:7"
                }
              ]
            },
            "documentation": null,
            "id": 7886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addSolutions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7853,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7886,
                  "src": "1356:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7855,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7886,
                  "src": "1368:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7857,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7886,
                  "src": "1385:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 7856,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1355:41:7"
            },
            "returnParameters": {
              "id": 7859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1420:0:7"
            },
            "scope": 7972,
            "src": "1333:286:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7970,
              "nodeType": "Block",
              "src": "1992:446:7",
              "statements": [
                {
                  "assignments": [
                    7902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7902,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7970,
                      "src": "2003:10:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 7901,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "2003:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7935,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7907,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2050:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7908,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "a",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10125,
                                  "src": "2050:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G1Point_$9471_memory",
                                    "typeString": "struct Pairing.G1Point memory"
                                  }
                                },
                                "id": 7909,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9468,
                                "src": "2050:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7910,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2061:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7911,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "a_p",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10127,
                                  "src": "2061:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G1Point_$9471_memory",
                                    "typeString": "struct Pairing.G1Point memory"
                                  }
                                },
                                "id": 7912,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9468,
                                "src": "2061:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7913,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2074:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7914,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "b",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10129,
                                  "src": "2074:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G2Point_$9480_memory",
                                    "typeString": "struct Pairing.G2Point memory"
                                  }
                                },
                                "id": 7915,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9475,
                                "src": "2074:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7916,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2085:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7917,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "b_p",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10131,
                                  "src": "2085:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G1Point_$9471_memory",
                                    "typeString": "struct Pairing.G1Point memory"
                                  }
                                },
                                "id": 7918,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9468,
                                "src": "2085:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7919,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2140:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7920,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "c",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10133,
                                  "src": "2140:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G1Point_$9471_memory",
                                    "typeString": "struct Pairing.G1Point memory"
                                  }
                                },
                                "id": 7921,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9468,
                                "src": "2140:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7922,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2150:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7923,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "c_p",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10135,
                                  "src": "2150:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G1Point_$9471_memory",
                                    "typeString": "struct Pairing.G1Point memory"
                                  }
                                },
                                "id": 7924,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9468,
                                "src": "2150:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7925,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2163:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7926,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "h",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10137,
                                  "src": "2163:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G1Point_$9471_memory",
                                    "typeString": "struct Pairing.G1Point memory"
                                  }
                                },
                                "id": 7927,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9468,
                                "src": "2163:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 7928,
                                    "name": "proof",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7892,
                                    "src": "2174:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    }
                                  },
                                  "id": 7929,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "k",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10139,
                                  "src": "2174:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_G1Point_$9471_memory",
                                    "typeString": "struct Pairing.G1Point memory"
                                  }
                                },
                                "id": 7930,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "X",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9468,
                                "src": "2174:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 7931,
                                "name": "input",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7896,
                                "src": "2186:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 7905,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10616,
                                "src": "2033:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 7906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2033:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 7932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2033:159:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 7904,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10623,
                          "src": "2023:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 7933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2023:170:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2016:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": "bytes4"
                    },
                    "id": 7934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2016:178:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2003:191:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7937,
                              "name": "submittedSolutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7843,
                              "src": "2213:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_solution_$7836_storage_$",
                                "typeString": "mapping(bytes4 => struct SolnSquareVerifier.solution storage ref)"
                              }
                            },
                            "id": 7939,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7938,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7902,
                              "src": "2232:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2213:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_solution_$7836_storage",
                              "typeString": "struct SolnSquareVerifier.solution storage ref"
                            }
                          },
                          "id": 7940,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7835,
                          "src": "2213:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2251:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2243:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2243:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2213:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c726561647920757365642050726f6f66",
                        "id": 7945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2255:20:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_862c0de7e98819e1822c20a49ec7f96da117ad9603c1e02f01800d3796ca3a37",
                          "typeString": "literal_string \"Already used Proof\""
                        },
                        "value": "Already used Proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_862c0de7e98819e1822c20a49ec7f96da117ad9603c1e02f01800d3796ca3a37",
                          "typeString": "literal_string \"Already used Proof\""
                        }
                      ],
                      "id": 7936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10632,
                        10633
                      ],
                      "referencedDeclaration": 10633,
                      "src": "2205:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2205:71:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7947,
                  "nodeType": "ExpressionStatement",
                  "src": "2205:71:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7951,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7892,
                            "src": "2321:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7952,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7896,
                            "src": "2328:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7949,
                            "name": "verifierContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7811,
                            "src": "2295:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$10614",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10613,
                          "src": "2295:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$10140_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 7953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2295:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f6f6620696e636f7272656374",
                        "id": 7954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2336:17:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5991c7ced01fd9f81110eddb5d842145968f67ee476c1e8c42e692e2e305c1f5",
                          "typeString": "literal_string \"Proof incorrect\""
                        },
                        "value": "Proof incorrect"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5991c7ced01fd9f81110eddb5d842145968f67ee476c1e8c42e692e2e305c1f5",
                          "typeString": "literal_string \"Proof incorrect\""
                        }
                      ],
                      "id": 7948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10632,
                        10633
                      ],
                      "referencedDeclaration": 10633,
                      "src": "2287:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2287:67:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7956,
                  "nodeType": "ExpressionStatement",
                  "src": "2287:67:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7958,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7888,
                        "src": "2379:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7959,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "2383:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7960,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7902,
                        "src": "2392:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 7957,
                      "name": "_addSolutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7886,
                      "src": "2365:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,uint256,bytes4)"
                      }
                    },
                    "id": 7961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:31:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7962,
                  "nodeType": "ExpressionStatement",
                  "src": "2365:31:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7966,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7888,
                        "src": "2418:2:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7967,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7890,
                        "src": "2422:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7963,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10686,
                        "src": "2407:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7972",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1476,
                      "src": "2407:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7969,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:23:7"
                }
              ]
            },
            "documentation": null,
            "id": 7971,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 7899,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7898,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 440,
                  "src": "1973:13:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1973:13:7"
              }
            ],
            "name": "mintRET",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7888,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "1868:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7887,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7890,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "1880:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7892,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "1897:27:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7891,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10140,
                    "src": "1897:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$10140_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7896,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7971,
                  "src": "1926:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7893,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1926:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7895,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1931:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1926:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1867:80:7"
            },
            "returnParameters": {
              "id": 7900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1992:0:7"
            },
            "scope": 7972,
            "src": "1851:587:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7973,
        "src": "336:2105:7"
      }
    ],
    "src": "0:2769:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7972
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0"
          ]
        },
        "id": 7804,
        "name": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7805,
        "name": "PragmaDirective",
        "src": "26:33:7"
      },
      {
        "attributes": {
          "SourceUnit": 1478,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7973,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7806,
        "name": "ImportDirective",
        "src": "171:30:7"
      },
      {
        "attributes": {
          "SourceUnit": 10615,
          "absolutePath": "project:/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7973,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7807,
        "name": "ImportDirective",
        "src": "203:24:7"
      },
      {
        "attributes": {
          "contractDependencies": [
            398,
            474,
            521,
            1025,
            1325,
            1436,
            1477,
            7802
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7972,
            1477,
            1436,
            7802,
            1325,
            1025,
            521,
            474,
            398
          ],
          "name": "SolnSquareVerifier",
          "scope": 7973
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1477,
                  "type": "contract CustomERC721Token"
                },
                "id": 7808,
                "name": "UserDefinedTypeName",
                "src": "367:17:7"
              }
            ],
            "id": 7809,
            "name": "InheritanceSpecifier",
            "src": "367:17:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "verifierContract",
              "scope": 7972,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Verifier",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10614,
                  "type": "contract Verifier"
                },
                "id": 7810,
                "name": "UserDefinedTypeName",
                "src": "504:8:7"
              }
            ],
            "id": 7811,
            "name": "VariableDeclaration",
            "src": "504:25:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7972,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 7831,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7812,
                        "name": "ElementaryTypeName",
                        "src": "550:6:7"
                      }
                    ],
                    "id": 7813,
                    "name": "VariableDeclaration",
                    "src": "550:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 7831,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7814,
                        "name": "ElementaryTypeName",
                        "src": "570:6:7"
                      }
                    ],
                    "id": 7815,
                    "name": "VariableDeclaration",
                    "src": "570:20:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierAddress",
                      "scope": 7831,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7816,
                        "name": "ElementaryTypeName",
                        "src": "592:7:7"
                      }
                    ],
                    "id": 7817,
                    "name": "VariableDeclaration",
                    "src": "592:23:7"
                  }
                ],
                "id": 7818,
                "name": "ParameterList",
                "src": "549:67:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7823,
                "name": "ParameterList",
                "src": "665:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1477,
                      "type": "type(contract CustomERC721Token)",
                      "value": "CustomERC721Token"
                    },
                    "id": 7819,
                    "name": "Identifier",
                    "src": "627:17:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7813,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7820,
                    "name": "Identifier",
                    "src": "645:4:7"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7815,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7821,
                    "name": "Identifier",
                    "src": "651:6:7"
                  }
                ],
                "id": 7822,
                "name": "ModifierInvocation",
                "src": "627:31:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Verifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7811,
                              "type": "contract Verifier",
                              "value": "verifierContract"
                            },
                            "id": 7824,
                            "name": "Identifier",
                            "src": "676:16:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract Verifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10614,
                                  "type": "type(contract Verifier)",
                                  "value": "Verifier"
                                },
                                "id": 7825,
                                "name": "Identifier",
                                "src": "695:8:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7817,
                                  "type": "address",
                                  "value": "verifierAddress"
                                },
                                "id": 7826,
                                "name": "Identifier",
                                "src": "704:15:7"
                              }
                            ],
                            "id": 7827,
                            "name": "FunctionCall",
                            "src": "695:25:7"
                          }
                        ],
                        "id": 7828,
                        "name": "Assignment",
                        "src": "676:44:7"
                      }
                    ],
                    "id": 7829,
                    "name": "ExpressionStatement",
                    "src": "676:44:7"
                  }
                ],
                "id": 7830,
                "name": "Block",
                "src": "665:63:7"
              }
            ],
            "id": 7831,
            "name": "FunctionDefinition",
            "src": "538:190:7"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.solution",
              "name": "solution",
              "scope": 7972,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "tokenId",
                  "scope": 7836,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7832,
                    "name": "ElementaryTypeName",
                    "src": "838:7:7"
                  }
                ],
                "id": 7833,
                "name": "VariableDeclaration",
                "src": "838:15:7"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "to",
                  "scope": 7836,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7834,
                    "name": "ElementaryTypeName",
                    "src": "864:7:7"
                  }
                ],
                "id": 7835,
                "name": "VariableDeclaration",
                "src": "864:10:7"
              }
            ],
            "id": 7836,
            "name": "StructDefinition",
            "src": "811:73:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "Solutions",
              "scope": 7972,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.solution[]",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "solution",
                      "referencedDeclaration": 7836,
                      "type": "struct SolnSquareVerifier.solution"
                    },
                    "id": 7837,
                    "name": "UserDefinedTypeName",
                    "src": "941:8:7"
                  }
                ],
                "id": 7838,
                "name": "ArrayTypeName",
                "src": "941:10:7"
              }
            ],
            "id": 7839,
            "name": "VariableDeclaration",
            "src": "941:20:7"
          },
          {
            "attributes": {
              "constant": false,
              "name": "submittedSolutions",
              "scope": 7972,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes4 => struct SolnSquareVerifier.solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes4 => struct SolnSquareVerifier.solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes4",
                      "type": "bytes4"
                    },
                    "id": 7840,
                    "name": "ElementaryTypeName",
                    "src": "1044:6:7"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "solution",
                      "referencedDeclaration": 7836,
                      "type": "struct SolnSquareVerifier.solution"
                    },
                    "id": 7841,
                    "name": "UserDefinedTypeName",
                    "src": "1054:8:7"
                  }
                ],
                "id": 7842,
                "name": "Mapping",
                "src": "1036:27:7"
              }
            ],
            "id": 7843,
            "name": "VariableDeclaration",
            "src": "1036:46:7"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "AddedToSolutions"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "to",
                      "scope": 7851,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7844,
                        "name": "ElementaryTypeName",
                        "src": "1176:7:7"
                      }
                    ],
                    "id": 7845,
                    "name": "VariableDeclaration",
                    "src": "1176:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "tokenId",
                      "scope": 7851,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7846,
                        "name": "ElementaryTypeName",
                        "src": "1196:7:7"
                      }
                    ],
                    "id": 7847,
                    "name": "VariableDeclaration",
                    "src": "1196:23:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": true,
                      "name": "key",
                      "scope": 7851,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes4",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes4",
                          "type": "bytes4"
                        },
                        "id": 7848,
                        "name": "ElementaryTypeName",
                        "src": "1221:6:7"
                      }
                    ],
                    "id": 7849,
                    "name": "VariableDeclaration",
                    "src": "1221:18:7"
                  }
                ],
                "id": 7850,
                "name": "ParameterList",
                "src": "1175:65:7"
              }
            ],
            "id": 7851,
            "name": "EventDefinition",
            "src": "1153:88:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_addSolutions",
              "scope": 7972,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7886,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7852,
                        "name": "ElementaryTypeName",
                        "src": "1356:7:7"
                      }
                    ],
                    "id": 7853,
                    "name": "VariableDeclaration",
                    "src": "1356:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7886,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7854,
                        "name": "ElementaryTypeName",
                        "src": "1368:7:7"
                      }
                    ],
                    "id": 7855,
                    "name": "VariableDeclaration",
                    "src": "1368:15:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "key",
                      "scope": 7886,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes4",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes4",
                          "type": "bytes4"
                        },
                        "id": 7856,
                        "name": "ElementaryTypeName",
                        "src": "1385:6:7"
                      }
                    ],
                    "id": 7857,
                    "name": "VariableDeclaration",
                    "src": "1385:10:7"
                  }
                ],
                "id": 7858,
                "name": "ParameterList",
                "src": "1355:41:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7859,
                "name": "ParameterList",
                "src": "1420:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7861
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "sol",
                          "scope": 7885,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "solution",
                              "referencedDeclaration": 7836,
                              "type": "struct SolnSquareVerifier.solution"
                            },
                            "id": 7860,
                            "name": "UserDefinedTypeName",
                            "src": "1431:8:7"
                          }
                        ],
                        "id": 7861,
                        "name": "VariableDeclaration",
                        "src": "1431:19:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "tokenId",
                            "to"
                          ],
                          "type": "struct SolnSquareVerifier.solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7836,
                              "type": "type(struct SolnSquareVerifier.solution storage pointer)",
                              "value": "solution"
                            },
                            "id": 7862,
                            "name": "Identifier",
                            "src": "1453:8:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7855,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7863,
                            "name": "Identifier",
                            "src": "1473:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7853,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7864,
                            "name": "Identifier",
                            "src": "1487:2:7"
                          }
                        ],
                        "id": 7865,
                        "name": "FunctionCall",
                        "src": "1453:38:7"
                      }
                    ],
                    "id": 7866,
                    "name": "VariableDeclarationStatement",
                    "src": "1431:60:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7843,
                                  "type": "mapping(bytes4 => struct SolnSquareVerifier.solution storage ref)",
                                  "value": "submittedSolutions"
                                },
                                "id": 7867,
                                "name": "Identifier",
                                "src": "1502:18:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7857,
                                  "type": "bytes4",
                                  "value": "key"
                                },
                                "id": 7868,
                                "name": "Identifier",
                                "src": "1521:3:7"
                              }
                            ],
                            "id": 7869,
                            "name": "IndexAccess",
                            "src": "1502:23:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7861,
                              "type": "struct SolnSquareVerifier.solution memory",
                              "value": "sol"
                            },
                            "id": 7870,
                            "name": "Identifier",
                            "src": "1528:3:7"
                          }
                        ],
                        "id": 7871,
                        "name": "Assignment",
                        "src": "1502:29:7"
                      }
                    ],
                    "id": 7872,
                    "name": "ExpressionStatement",
                    "src": "1502:29:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_solution_$7836_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7839,
                                  "type": "struct SolnSquareVerifier.solution storage ref[] storage ref",
                                  "value": "Solutions"
                                },
                                "id": 7873,
                                "name": "Identifier",
                                "src": "1542:9:7"
                              }
                            ],
                            "id": 7875,
                            "name": "MemberAccess",
                            "src": "1542:14:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7861,
                              "type": "struct SolnSquareVerifier.solution memory",
                              "value": "sol"
                            },
                            "id": 7876,
                            "name": "Identifier",
                            "src": "1557:3:7"
                          }
                        ],
                        "id": 7877,
                        "name": "FunctionCall",
                        "src": "1542:19:7"
                      }
                    ],
                    "id": 7878,
                    "name": "ExpressionStatement",
                    "src": "1542:19:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7851,
                              "type": "function (address,uint256,bytes4)",
                              "value": "AddedToSolutions"
                            },
                            "id": 7879,
                            "name": "Identifier",
                            "src": "1577:16:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7853,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7880,
                            "name": "Identifier",
                            "src": "1594:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7855,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7881,
                            "name": "Identifier",
                            "src": "1598:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7857,
                              "type": "bytes4",
                              "value": "key"
                            },
                            "id": 7882,
                            "name": "Identifier",
                            "src": "1607:3:7"
                          }
                        ],
                        "id": 7883,
                        "name": "FunctionCall",
                        "src": "1577:34:7"
                      }
                    ],
                    "id": 7884,
                    "name": "EmitStatement",
                    "src": "1572:39:7"
                  }
                ],
                "id": 7885,
                "name": "Block",
                "src": "1420:199:7"
              }
            ],
            "id": 7886,
            "name": "FunctionDefinition",
            "src": "1333:286:7"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mintRET",
              "scope": 7972,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7971,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7887,
                        "name": "ElementaryTypeName",
                        "src": "1868:7:7"
                      }
                    ],
                    "id": 7888,
                    "name": "VariableDeclaration",
                    "src": "1868:10:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7971,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7889,
                        "name": "ElementaryTypeName",
                        "src": "1880:7:7"
                      }
                    ],
                    "id": 7890,
                    "name": "VariableDeclaration",
                    "src": "1880:15:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 7971,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Verifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Verifier.Proof",
                          "referencedDeclaration": 10140,
                          "type": "struct Verifier.Proof"
                        },
                        "id": 7891,
                        "name": "UserDefinedTypeName",
                        "src": "1897:14:7"
                      }
                    ],
                    "id": 7892,
                    "name": "VariableDeclaration",
                    "src": "1897:27:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7971,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7893,
                            "name": "ElementaryTypeName",
                            "src": "1926:4:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7894,
                            "name": "Literal",
                            "src": "1931:1:7"
                          }
                        ],
                        "id": 7895,
                        "name": "ArrayTypeName",
                        "src": "1926:7:7"
                      }
                    ],
                    "id": 7896,
                    "name": "VariableDeclaration",
                    "src": "1926:20:7"
                  }
                ],
                "id": 7897,
                "name": "ParameterList",
                "src": "1867:80:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7900,
                "name": "ParameterList",
                "src": "1992:0:7"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 440,
                      "type": "modifier ()",
                      "value": "whenNotPaused"
                    },
                    "id": 7898,
                    "name": "Identifier",
                    "src": "1973:13:7"
                  }
                ],
                "id": 7899,
                "name": "ModifierInvocation",
                "src": "1973:13:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7902
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7970,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes4",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes4",
                              "type": "bytes4"
                            },
                            "id": 7901,
                            "name": "ElementaryTypeName",
                            "src": "2003:6:7"
                          }
                        ],
                        "id": 7902,
                        "name": "VariableDeclaration",
                        "src": "2003:10:7"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes4",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(bytes4)",
                              "value": "bytes4"
                            },
                            "id": 7903,
                            "name": "ElementaryTypeNameExpression",
                            "src": "2016:6:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10623,
                                  "type": "function (bytes memory) pure returns (bytes32)",
                                  "value": "keccak256"
                                },
                                "id": 7904,
                                "name": "Identifier",
                                "src": "2023:9:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_uint256_$2_memory",
                                          "typeString": "uint256[2] memory"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                          "typeString": "uint256[2] memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "member_name": "encodePacked",
                                      "referencedDeclaration": null,
                                      "type": "function () pure returns (bytes memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 10616,
                                          "type": "abi",
                                          "value": "abi"
                                        },
                                        "id": 7905,
                                        "name": "Identifier",
                                        "src": "2033:3:7"
                                      }
                                    ],
                                    "id": 7906,
                                    "name": "MemberAccess",
                                    "src": "2033:16:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9468,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "a",
                                          "referencedDeclaration": 10125,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7907,
                                            "name": "Identifier",
                                            "src": "2050:5:7"
                                          }
                                        ],
                                        "id": 7908,
                                        "name": "MemberAccess",
                                        "src": "2050:7:7"
                                      }
                                    ],
                                    "id": 7909,
                                    "name": "MemberAccess",
                                    "src": "2050:9:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9468,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "a_p",
                                          "referencedDeclaration": 10127,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7910,
                                            "name": "Identifier",
                                            "src": "2061:5:7"
                                          }
                                        ],
                                        "id": 7911,
                                        "name": "MemberAccess",
                                        "src": "2061:9:7"
                                      }
                                    ],
                                    "id": 7912,
                                    "name": "MemberAccess",
                                    "src": "2061:11:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9475,
                                      "type": "uint256[2] memory"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "b",
                                          "referencedDeclaration": 10129,
                                          "type": "struct Pairing.G2Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7913,
                                            "name": "Identifier",
                                            "src": "2074:5:7"
                                          }
                                        ],
                                        "id": 7914,
                                        "name": "MemberAccess",
                                        "src": "2074:7:7"
                                      }
                                    ],
                                    "id": 7915,
                                    "name": "MemberAccess",
                                    "src": "2074:9:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9468,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "b_p",
                                          "referencedDeclaration": 10131,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7916,
                                            "name": "Identifier",
                                            "src": "2085:5:7"
                                          }
                                        ],
                                        "id": 7917,
                                        "name": "MemberAccess",
                                        "src": "2085:9:7"
                                      }
                                    ],
                                    "id": 7918,
                                    "name": "MemberAccess",
                                    "src": "2085:11:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9468,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "c",
                                          "referencedDeclaration": 10133,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7919,
                                            "name": "Identifier",
                                            "src": "2140:5:7"
                                          }
                                        ],
                                        "id": 7920,
                                        "name": "MemberAccess",
                                        "src": "2140:7:7"
                                      }
                                    ],
                                    "id": 7921,
                                    "name": "MemberAccess",
                                    "src": "2140:9:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9468,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "c_p",
                                          "referencedDeclaration": 10135,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7922,
                                            "name": "Identifier",
                                            "src": "2150:5:7"
                                          }
                                        ],
                                        "id": 7923,
                                        "name": "MemberAccess",
                                        "src": "2150:9:7"
                                      }
                                    ],
                                    "id": 7924,
                                    "name": "MemberAccess",
                                    "src": "2150:11:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9468,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "h",
                                          "referencedDeclaration": 10137,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7925,
                                            "name": "Identifier",
                                            "src": "2163:5:7"
                                          }
                                        ],
                                        "id": 7926,
                                        "name": "MemberAccess",
                                        "src": "2163:7:7"
                                      }
                                    ],
                                    "id": 7927,
                                    "name": "MemberAccess",
                                    "src": "2163:9:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "X",
                                      "referencedDeclaration": 9468,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "k",
                                          "referencedDeclaration": 10139,
                                          "type": "struct Pairing.G1Point memory"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 7892,
                                              "type": "struct Verifier.Proof memory",
                                              "value": "proof"
                                            },
                                            "id": 7928,
                                            "name": "Identifier",
                                            "src": "2174:5:7"
                                          }
                                        ],
                                        "id": 7929,
                                        "name": "MemberAccess",
                                        "src": "2174:7:7"
                                      }
                                    ],
                                    "id": 7930,
                                    "name": "MemberAccess",
                                    "src": "2174:9:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7896,
                                      "type": "uint256[2] memory",
                                      "value": "input"
                                    },
                                    "id": 7931,
                                    "name": "Identifier",
                                    "src": "2186:5:7"
                                  }
                                ],
                                "id": 7932,
                                "name": "FunctionCall",
                                "src": "2033:159:7"
                              }
                            ],
                            "id": 7933,
                            "name": "FunctionCall",
                            "src": "2023:170:7"
                          }
                        ],
                        "id": 7934,
                        "name": "FunctionCall",
                        "src": "2016:178:7"
                      }
                    ],
                    "id": 7935,
                    "name": "VariableDeclarationStatement",
                    "src": "2003:191:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_862c0de7e98819e1822c20a49ec7f96da117ad9603c1e02f01800d3796ca3a37",
                                  "typeString": "literal_string \"Already used Proof\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10632,
                                10633
                              ],
                              "referencedDeclaration": 10633,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7936,
                            "name": "Identifier",
                            "src": "2205:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "to",
                                  "referencedDeclaration": 7835,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7843,
                                          "type": "mapping(bytes4 => struct SolnSquareVerifier.solution storage ref)",
                                          "value": "submittedSolutions"
                                        },
                                        "id": 7937,
                                        "name": "Identifier",
                                        "src": "2213:18:7"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7902,
                                          "type": "bytes4",
                                          "value": "key"
                                        },
                                        "id": 7938,
                                        "name": "Identifier",
                                        "src": "2232:3:7"
                                      }
                                    ],
                                    "id": 7939,
                                    "name": "IndexAccess",
                                    "src": "2213:23:7"
                                  }
                                ],
                                "id": 7940,
                                "name": "MemberAccess",
                                "src": "2213:26:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7941,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2243:7:7"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7942,
                                    "name": "Literal",
                                    "src": "2251:1:7"
                                  }
                                ],
                                "id": 7943,
                                "name": "FunctionCall",
                                "src": "2243:10:7"
                              }
                            ],
                            "id": 7944,
                            "name": "BinaryOperation",
                            "src": "2213:40:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "416c726561647920757365642050726f6f66",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Already used Proof\"",
                              "value": "Already used Proof"
                            },
                            "id": 7945,
                            "name": "Literal",
                            "src": "2255:20:7"
                          }
                        ],
                        "id": 7946,
                        "name": "FunctionCall",
                        "src": "2205:71:7"
                      }
                    ],
                    "id": 7947,
                    "name": "ExpressionStatement",
                    "src": "2205:71:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5991c7ced01fd9f81110eddb5d842145968f67ee476c1e8c42e692e2e305c1f5",
                                  "typeString": "literal_string \"Proof incorrect\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10632,
                                10633
                              ],
                              "referencedDeclaration": 10633,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7948,
                            "name": "Identifier",
                            "src": "2287:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$10140_memory_ptr",
                                      "typeString": "struct Verifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 10613,
                                  "type": "function (struct Verifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7811,
                                      "type": "contract Verifier",
                                      "value": "verifierContract"
                                    },
                                    "id": 7949,
                                    "name": "Identifier",
                                    "src": "2295:16:7"
                                  }
                                ],
                                "id": 7950,
                                "name": "MemberAccess",
                                "src": "2295:25:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7892,
                                  "type": "struct Verifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 7951,
                                "name": "Identifier",
                                "src": "2321:5:7"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7896,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7952,
                                "name": "Identifier",
                                "src": "2328:5:7"
                              }
                            ],
                            "id": 7953,
                            "name": "FunctionCall",
                            "src": "2295:39:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50726f6f6620696e636f7272656374",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Proof incorrect\"",
                              "value": "Proof incorrect"
                            },
                            "id": 7954,
                            "name": "Literal",
                            "src": "2336:17:7"
                          }
                        ],
                        "id": 7955,
                        "name": "FunctionCall",
                        "src": "2287:67:7"
                      }
                    ],
                    "id": 7956,
                    "name": "ExpressionStatement",
                    "src": "2287:67:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7886,
                              "type": "function (address,uint256,bytes4)",
                              "value": "_addSolutions"
                            },
                            "id": 7957,
                            "name": "Identifier",
                            "src": "2365:13:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7888,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7958,
                            "name": "Identifier",
                            "src": "2379:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7890,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7959,
                            "name": "Identifier",
                            "src": "2383:7:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7902,
                              "type": "bytes4",
                              "value": "key"
                            },
                            "id": 7960,
                            "name": "Identifier",
                            "src": "2392:3:7"
                          }
                        ],
                        "id": 7961,
                        "name": "FunctionCall",
                        "src": "2365:31:7"
                      }
                    ],
                    "id": 7962,
                    "name": "ExpressionStatement",
                    "src": "2365:31:7"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1476,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10686,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7963,
                                "name": "Identifier",
                                "src": "2407:5:7"
                              }
                            ],
                            "id": 7965,
                            "name": "MemberAccess",
                            "src": "2407:10:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7888,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7966,
                            "name": "Identifier",
                            "src": "2418:2:7"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7890,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7967,
                            "name": "Identifier",
                            "src": "2422:7:7"
                          }
                        ],
                        "id": 7968,
                        "name": "FunctionCall",
                        "src": "2407:23:7"
                      }
                    ],
                    "id": 7969,
                    "name": "ExpressionStatement",
                    "src": "2407:23:7"
                  }
                ],
                "id": 7970,
                "name": "Block",
                "src": "1992:446:7"
              }
            ],
            "id": 7971,
            "name": "FunctionDefinition",
            "src": "1851:587:7"
          }
        ],
        "id": 7972,
        "name": "ContractDefinition",
        "src": "336:2105:7"
      }
    ],
    "id": 7973,
    "name": "SourceUnit",
    "src": "0:2769:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x3c84595952fd90cc12791561992f9261aebc7bb8b993431fdfbf11b75fc5e772": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "bytes4",
              "name": "key",
              "type": "bytes4"
            }
          ],
          "name": "AddedToSolutions",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x3f3bc0d25569b73b8f83a7aa1967d8934d14a8236ef400ce36406a2d5cd61dd6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "ownershipChanged",
          "type": "event"
        },
        "0x2117a86d7496b6aed0459f1c7ddcff93ed4ab54d2fb577eea08c310cf98fcb4e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "unPaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x9be801dDC4D7CE82a0d84Aecb4126097Ab67E8Db",
      "transactionHash": "0xf5836fa72ceb14cc68a1a0dcd41ad692496ed4d088803a3a3bc5ab12524118c4"
    }
  },
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-09-02T13:56:21.230Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}